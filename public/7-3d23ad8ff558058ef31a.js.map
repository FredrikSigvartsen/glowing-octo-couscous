{"version":3,"sources":["webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.match.js","webpack:///./node_modules/react-draggable/dist/react-draggable.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","__webpack_require__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","undefined","anObject","toLength","advanceStringIndex","regExpExec","defined","MATCH","$match","maybeCallNative","regexp","O","this","fn","RegExp","String","res","done","value","rx","S","global","fullUnicode","unicode","lastIndex","result","A","n","matchStr","ReactDOM","React","createCommonjsModule","makeEmptyFunction","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","emptyFunction_1","validateFormat","format","Error","invariant_1","condition","a","b","c","d","e","f","error","args","argIndex","replace","name","framesToPop","warning_1","indexOf","_len2","_key2","_len","_key","message","console","x","concat","getOwnPropertySymbols","Object","prototype","propIsEnumerable","propertyIsEnumerable","objectAssign","assign","test1","getOwnPropertyNames","test2","fromCharCode","order2","map","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","TypeError","toObject","s","ReactPropTypesSecret_1","invariant$1","warning$1","ReactPropTypesSecret$1","loggedTypeFailures","checkPropTypes_1","typeSpecs","values","location","componentName","getStack","typeSpecName","ex","stack","factoryWithTypeCheckers","isValidElement","throwOnDirectAccess","ITERATOR_SYMBOL","Symbol","iterator","FAUX_ITERATOR_SYMBOL","ANONYMOUS","ReactPropTypes","array","createPrimitiveTypeChecker","bool","func","number","object","string","symbol","any","createChainableTypeChecker","arrayOf","typeChecker","props","propName","propFullName","PropTypeError","propValue","propType","getPropType","element","instanceOf","expectedClass","expectedClassName","actualClassName","constructor","node","isNode","objectOf","oneOf","expectedValues","y","valuesString","JSON","stringify","oneOfType","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","shape","shapeTypes","exact","allKeys","validate","manualPropTypeCallCache","manualPropTypeWarningCount","checkType","isRequired","secret","cacheKey","chainedCheckType","bind","expectedType","preciseType","getPreciseType","every","iteratorFn","maybeIterable","getIteratorFn","step","entries","next","entry","isSymbol","Date","type","checkPropTypes","PropTypes","propTypes","REACT_ELEMENT_TYPE","$$typeof","classnames","window","findInArray","callback","isFunction","toString","isNum","num","isNaN","_int","parseInt","dontSetMe","prefixes","browserPrefixToKey","prop","prefix","str","out","shouldCapitalize","toUpperCase","kebabToTitleCase","browserPrefix","document","style","documentElement","getPrefix","classCallCheck","instance","Constructor","createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","obj","_extends","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","slicedToArray","arr","_arr","_n","_d","_e","_s","_i","sliceIterator","matchesSelectorFunc","matchesSelector","el","selector","method","matchesSelectorAndParentsTo","baseNode","parentNode","addEvent","event","handler","attachEvent","addEventListener","removeEvent","detachEvent","removeEventListener","outerHeight","height","clientHeight","computedStyle","ownerDocument","defaultView","getComputedStyle","borderTopWidth","borderBottomWidth","outerWidth","width","clientWidth","borderLeftWidth","borderRightWidth","innerHeight","paddingTop","paddingBottom","innerWidth","paddingLeft","paddingRight","getTranslation","_ref2","positionOffset","unitSuffix","translation","defaultX","defaultY","addUserSelectStyles","doc","className","styleEl","getElementById","createElement","id","innerHTML","getElementsByTagName","appendChild","body","classList","add","match","removeUserSelectStyles","remove","selection","empty","getSelection","removeAllRanges","styleHacks","childStyle","touchAction","canDragX","draggable","axis","canDragY","getControlPosition","touchIdentifier","draggableCore","touchObj","identifier","targetTouches","t","changedTouches","getTouch","findDOMNode","offsetParent","evt","offsetParentRect","left","top","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","offsetXYFromParent","createCoreData","state","isStart","lastX","deltaX","deltaY","lastY","createDraggableData","coreData","scale","eventsFor","touch","start","move","stop","mouse","dragEventFor","DraggableCore","_React$Component","_ref","_temp","_this","getPrototypeOf","dragging","NaN","handleDragStart","onMouseDown","allowAnyClick","button","thisNode","disabled","Node","handle","cancel","getTouchIdentifier","setState","position","coreEvent","onStart","shouldUpdate","enableUserSelectHack","handleDrag","handleDragStop","preventDefault","grid","_deltaX","_deltaY","_snapToGrid","pendingX","pendingY","Math","round","snapToGrid","_snapToGrid2","onDrag","MouseEvent","createEvent","initMouseEvent","onStop","onMouseUp","onTouchStart","onTouchEnd","cloneElement","Children","only","children","Component","displayName","nodeType","transform","defaultProps","Draggable","onDragStart","shouldStart","dragged","uiData","newState","bounds","_x","_y","slackX","slackY","_getBoundPosition","right","bottom","cloneBounds","ownerWindow","boundNode","querySelector","HTMLElement","nodeStyle","boundNodeStyle","offsetLeft","marginLeft","offsetTop","marginTop","marginRight","marginBottom","min","max","getBoundPosition","_getBoundPosition2","newStateX","newStateY","onDragStop","shouldStop","controlled","Boolean","_this$props$position","_x2","_y2","defaultPosition","isElementSVG","warn","SVGElement","nextProps","_classNames","controlPos","svgTransform","transformOpts","createCSSTransform","_props","defaultClassName","defaultClassNameDragging","defaultClassNameDragged","factory"],"mappings":"6EAAA,IAAAA,EAAAC,EAAQ,IASR,WACA,aAEA,IAAAC,EAAA,GAAiBC,eAEjB,SAAAC,IAGA,IAFA,IAAAC,EAAA,GAEAC,EAAA,EAAmBA,EAAAC,UAAAC,OAAsBF,IAAA,CACzC,IAAAG,EAAAF,UAAAD,GACA,GAAAG,EAAA,CACA,IAAAC,SAAAD,EAEA,cAAAC,GAAA,WAAAA,EACAL,EAAAM,KAAAF,QACO,GAAAG,MAAAC,QAAAJ,MAAAD,OAAA,CACP,IAAAM,EAAAV,EAAAW,MAAA,KAAAN,GAEAK,GACAT,EAAAM,KAAAG,QAEO,cAAAJ,EACP,QAAAM,KAAAP,EACAP,EAAAe,KAAAR,EAAAO,IAAAP,EAAAO,IACAX,EAAAM,KAAAK,IAMA,OAAAX,EAAAa,KAAA,KAGmCC,EAAAC,SACnChB,EAAA,QAAAA,EACAe,EAAAC,QAAAhB,QAKKiB,KAFsBrB,EAAA,WAC3B,OAAAI,GACKW,MAAAK,EAFoB,OAEpBD,EAAAC,QAAApB,GAxCL,qCCPA,IAAAsB,EAAerB,EAAQ,GACvBsB,EAAetB,EAAQ,IACvBuB,EAAyBvB,EAAQ,KACjCwB,EAAiBxB,EAAQ,KAGzBA,EAAQ,IAARA,CAAuB,mBAAAyB,EAAAC,EAAAC,EAAAC,GACvB,OAGA,SAAAC,GACA,IAAAC,EAAAL,EAAAM,MACAC,EAAAZ,MAAAS,OAAAT,EAAAS,EAAAH,GACA,YAAAN,IAAAY,IAAAhB,KAAAa,EAAAC,GAAA,IAAAG,OAAAJ,GAAAH,GAAAQ,OAAAJ,KAIA,SAAAD,GACA,IAAAM,EAAAP,EAAAD,EAAAE,EAAAE,MACA,GAAAI,EAAAC,KAAA,OAAAD,EAAAE,MACA,IAAAC,EAAAjB,EAAAQ,GACAU,EAAAL,OAAAH,MACA,IAAAO,EAAAE,OAAA,OAAAhB,EAAAc,EAAAC,GACA,IAAAE,EAAAH,EAAAI,QACAJ,EAAAK,UAAA,EAIA,IAHA,IAEAC,EAFAC,EAAA,GACAC,EAAA,EAEA,QAAAF,EAAApB,EAAAc,EAAAC,KAAA,CACA,IAAAQ,EAAAb,OAAAU,EAAA,IACAC,EAAAC,GAAAC,EACA,KAAAA,IAAAT,EAAAK,UAAApB,EAAAgB,EAAAjB,EAAAgB,EAAAK,WAAAF,IACAK,IAEA,WAAAA,EAAA,KAAAD,2BCpCA7C,EAAQ,KAERA,EAAQ,KAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,KAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAGsDkB,EAAAC,QAC7D,SAAA6B,EAAAC,GACD,aAKA,SAAAC,EAAAlB,EAAAd,GACA,OAEKc,EAFLd,EAAA,CACAC,QAAA,IACKD,EAAAC,SAAAD,EAAAC,QAYL,SAAAgC,EAAA3C,GACA,kBACA,OAAAA,GApBAwC,OAAA9C,eAAA,WAAA8C,EAAA,QAAAA,EACAC,OAAA/C,eAAA,WAAA+C,EAAA,QAAAA,EA6BA,IAAAG,EAAA,aAEAA,EAAAC,YAAAF,EACAC,EAAAE,iBAAAH,GAAA,GACAC,EAAAG,gBAAAJ,GAAA,GACAC,EAAAI,gBAAAL,EAAA,MAEAC,EAAAK,gBAAA,WACA,OAAA1B,MAGAqB,EAAAM,oBAAA,SAAAlD,GACA,OAAAA,GAGA,IAAAmD,EAAAP,EAoBAQ,EAAA,SAAAC,KAGAD,EAAA,SAAAC,GACA,QAAAzC,IAAAyC,EACA,UAAAC,MAAA,iDA4BA,IAAAC,EAvBA,SAAAC,EAAAH,EAAAI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAGA,GAFAV,EAAAC,IAEAG,EAAA,CACA,IAAAO,EAEA,QAAAnD,IAAAyC,EACAU,EAAA,IAAAT,MAAA,qIACO,CACP,IAAAU,EAAA,CAAAP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAG,EAAA,GACAF,EAAA,IAAAT,MAAAD,EAAAa,QAAA,iBACA,OAAAF,EAAAC,SAEAE,KAAA,sBAKA,MAFAJ,EAAAK,YAAA,EAEAL,IAsDAM,EAlBA,SAAAb,EAAAH,GACA,QAAAzC,IAAAyC,EACA,UAAAC,MAAA,6EAGA,OAAAD,EAAAiB,QAAA,iCAIAd,EAAA,CACA,QAAAe,EAAAzE,UAAAC,OAAAiE,EAAA7D,MAAAoE,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAA8FA,EAAAD,EAAeC,IAC7GR,EAAAQ,EAAA,GAAA1E,UAAA0E,IAjCA,SAAAnB,GACA,QAAAoB,EAAA3E,UAAAC,OAAAiE,EAAA7D,MAAAsE,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAwFA,EAAAD,EAAaC,IACrGV,EAAAU,EAAA,GAAA5E,UAAA4E,GAGA,IAAAT,EAAA,EACAU,EAAA,YAAAtB,EAAAa,QAAA,iBACA,OAAAF,EAAAC,OAGA,oBAAAW,SACAA,QAAAb,MAAAY,GAGA,IAIA,UAAArB,MAAAqB,GACO,MAAAE,OAiBPvE,WAAAM,EAAA,CAAAyC,GAAAyB,OAAAd,MAaAe,EAAAC,OAAAD,sBACArF,EAAAsF,OAAAC,UAAAvF,eACAwF,EAAAF,OAAAC,UAAAE,qBA0DAC,EAhDA,WACA,IACA,IAAAJ,OAAAK,OACA,SAKA,IAAAC,EAAA,IAAA5D,OAAA,OAIA,GAFA4D,EAAA,QAEA,MAAAN,OAAAO,oBAAAD,GAAA,GACA,SAMA,IAFA,IAAAE,EAAA,GAEA3F,EAAA,EAAqBA,EAAA,GAAQA,IAC7B2F,EAAA,IAAA9D,OAAA+D,aAAA5F,MAGA,IAAA6F,EAAAV,OAAAO,oBAAAC,GAAAG,IAAA,SAAArD,GACA,OAAAkD,EAAAlD,KAGA,kBAAAoD,EAAAjF,KAAA,IACA,SAIA,IAAAmF,EAAA,GAKA,MAJA,uBAAAC,MAAA,IAAAC,QAAA,SAAAC,GACAH,EAAAG,OAGsC,yBAAtCf,OAAAgB,KAAAhB,OAAAK,OAAA,GAAsCO,IAAAnF,KAAA,IAKjC,MAAAwF,GAEL,UAIAC,GAAAlB,OAAAK,OAAA,SAAAc,EAAAC,GAKA,IAJA,IAAAC,EAEAC,EADAC,EA1DA,SAAAC,GACA,GAAAA,QACA,UAAAC,UAAA,yDAGA,OAAAzB,OAAAwB,GAqDAE,CAAAP,GAGAQ,EAAA,EAAmBA,EAAA7G,UAAAC,OAAsB4G,IAAA,CAGzC,QAAApG,KAFA8F,EAAArB,OAAAlF,UAAA6G,IAGAjH,EAAAc,KAAA6F,EAAA9F,KACAgG,EAAAhG,GAAA8F,EAAA9F,IAIA,GAAAwE,EAAA,CACAuB,EAAAvB,EAAAsB,GAEA,QAAAxG,EAAA,EAAuBA,EAAAyG,EAAAvG,OAAoBF,IAC3CqF,EAAA1E,KAAA6F,EAAAC,EAAAzG,MACA0G,EAAAD,EAAAzG,IAAAwG,EAAAC,EAAAzG,MAMA,OAAA0G,GAUAK,EADA,+CAGAC,EAAAtD,EACAuD,EAAAzC,EACA0C,EAAAH,EACAI,EAAA,GA6CAC,EA/BA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,QAAAC,KAAAL,EACA,GAAAA,EAAAxH,eAAA6H,GAAA,CACA,IAAAxD,EAIA,IAGA8C,EAAA,mBAAAK,EAAAK,GAAA,gHAAoGF,GAAA,cAAAD,EAAAG,SAAAL,EAAAK,IACpGxD,EAAAmD,EAAAK,GAAAJ,EAAAI,EAAAF,EAAAD,EAAA,KAAAL,GACW,MAAAS,GACXzD,EAAAyD,EAKA,GAFAV,GAAA/C,gBAAAT,MAAA,2RAAoG+D,GAAA,cAAAD,EAAAG,SAAAxD,GAEpGA,aAAAT,SAAAS,EAAAY,WAAAqC,GAAA,CAGAA,EAAAjD,EAAAY,UAAA,EACA,IAAA8C,EAAAH,MAAA,GACAR,GAAA,yBAAAM,EAAArD,EAAAY,QAAA,MAAA8C,IAAA,OASAC,EAAA,SAAAC,EAAAC,GAEA,IAAAC,EAAA,mBAAAC,eAAAC,SACAC,EAAA,aAwEAC,EAAA,gBAGAC,EAAA,CACAC,MAAAC,EAAA,SACAC,KAAAD,EAAA,WACAE,KAAAF,EAAA,YACAG,OAAAH,EAAA,UACAI,OAAAJ,EAAA,UACAK,OAAAL,EAAA,UACAM,OAAAN,EAAA,UACAO,IAmHAC,EAAAzF,EAAAH,iBAlHA6F,QAqHA,SAAAC,GAwBA,OAAAF,EAvBA,SAAAG,EAAAC,EAAA3B,EAAAD,EAAA6B,GACA,sBAAAH,EACA,WAAAI,EAAA,aAAAD,EAAA,mBAAA5B,EAAA,mDAGA,IAAA8B,EAAAJ,EAAAC,GAEA,IAAA7I,MAAAC,QAAA+I,GAAA,CACA,IAAAC,EAAAC,EAAAF,GACA,WAAAD,EAAA,WAAA9B,EAAA,KAAA6B,EAAA,cAAAG,EAAA,kBAAA/B,EAAA,yBAGA,QAAAxH,EAAA,EAAuBA,EAAAsJ,EAAApJ,OAAsBF,IAAA,CAC7C,IAAAkE,EAAA+E,EAAAK,EAAAtJ,EAAAwH,EAAAD,EAAA6B,EAAA,IAAApJ,EAAA,IAAA+G,GAEA,GAAA7C,aAAAT,MACA,OAAAS,EAIA,eAzIAuF,QA2JAV,EAXA,SAAAG,EAAAC,EAAA3B,EAAAD,EAAA6B,GACA,IAAAE,EAAAJ,EAAAC,GAEA,IAAArB,EAAAwB,GAAA,CACA,IAAAC,EAAAC,EAAAF,GACA,WAAAD,EAAA,WAAA9B,EAAA,KAAA6B,EAAA,cAAAG,EAAA,kBAAA/B,EAAA,sCAGA,cAvJAkC,WA6JA,SAAAC,GAWA,OAAAZ,EAVA,SAAAG,EAAAC,EAAA3B,EAAAD,EAAA6B,GACA,KAAAF,EAAAC,aAAAQ,GAAA,CACA,IAAAC,EAAAD,EAAArF,MAAA8D,EACAyB,GA6SAP,EA7SAJ,EAAAC,IA8SAW,aAAAR,EAAAQ,YAAAxF,KAIAgF,EAAAQ,YAAAxF,KAHA8D,EA9SA,WAAAiB,EAAA,WAAA9B,EAAA,KAAA6B,EAAA,cAAAS,EAAA,kBAAArC,EAAA,4BAAAoC,EAAA,MA4SA,IAAAN,EAzSA,eApKAS,KAoQAhB,EARA,SAAAG,EAAAC,EAAA3B,EAAAD,EAAA6B,GACA,OAAAY,EAAAd,EAAAC,IAIA,KAHA,IAAAE,EAAA,WAAA9B,EAAA,KAAA6B,EAAA,kBAAA5B,EAAA,8BA7PAyC,SA+LA,SAAAhB,GA0BA,OAAAF,EAzBA,SAAAG,EAAAC,EAAA3B,EAAAD,EAAA6B,GACA,sBAAAH,EACA,WAAAI,EAAA,aAAAD,EAAA,mBAAA5B,EAAA,oDAGA,IAAA8B,EAAAJ,EAAAC,GACAI,EAAAC,EAAAF,GAEA,cAAAC,EACA,WAAAF,EAAA,WAAA9B,EAAA,KAAA6B,EAAA,cAAAG,EAAA,kBAAA/B,EAAA,0BAGA,QAAA9G,KAAA4I,EACA,GAAAA,EAAAzJ,eAAAa,GAAA,CACA,IAAAwD,EAAA+E,EAAAK,EAAA5I,EAAA8G,EAAAD,EAAA6B,EAAA,IAAA1I,EAAAqG,GAEA,GAAA7C,aAAAT,MACA,OAAAS,EAKA,eArNAgG,MAwKA,SAAAC,GACA,OAAA7J,MAAAC,QAAA4J,GAkBApB,EAbA,SAAAG,EAAAC,EAAA3B,EAAAD,EAAA6B,GAGA,IAFA,IAAAE,EAAAJ,EAAAC,GAEAnJ,EAAA,EAAuBA,EAAAmK,EAAAjK,OAA2BF,IAClD,GAtKAgF,EAsKAsE,EAtKAc,EAsKAD,EAAAnK,GApKAgF,IAAAoF,EAGA,IAAApF,GAAA,EAAAA,GAAA,EAAAoF,EAGApF,MAAAoF,KA+JA,YAvKA,IAAApF,EAAAoF,EA2KAC,EAAAC,KAAAC,UAAAJ,GACA,WAAAd,EAAA,WAAA9B,EAAA,KAAA6B,EAAA,eAAAE,EAAA,kBAAA9B,EAAA,sBAAA6C,EAAA,QAdA7F,GAAA,wEACAlB,EAAAH,kBA1KAqH,UA0NA,SAAAC,GACA,IAAAnK,MAAAC,QAAAkK,GAEA,OADAjG,GAAA,4EACAlB,EAAAH,gBAGA,QAAAnD,EAAA,EAAqBA,EAAAyK,EAAAvK,OAAgCF,IAAA,CACrD,IAAA0K,EAAAD,EAAAzK,GAEA,sBAAA0K,EAEA,OADAlG,GAAA,+GAAAmG,EAAAD,GAAA1K,GACAsD,EAAAH,gBAgBA,OAAA4F,EAZA,SAAAG,EAAAC,EAAA3B,EAAAD,EAAA6B,GACA,QAAApJ,EAAA,EAAuBA,EAAAyK,EAAAvK,OAAgCF,IAAA,CACvD,IAAA0K,EAAAD,EAAAzK,GAEA,SAAA0K,EAAAxB,EAAAC,EAAA3B,EAAAD,EAAA6B,EAAArC,GACA,YAIA,WAAAsC,EAAA,WAAA9B,EAAA,KAAA6B,EAAA,kBAAA5B,EAAA,SAjPAoD,MAmQA,SAAAC,GA0BA,OAAA9B,EAzBA,SAAAG,EAAAC,EAAA3B,EAAAD,EAAA6B,GACA,IAAAE,EAAAJ,EAAAC,GACAI,EAAAC,EAAAF,GAEA,cAAAC,EACA,WAAAF,EAAA,WAAA9B,EAAA,KAAA6B,EAAA,cAAAG,EAAA,kBAAA/B,EAAA,yBAGA,QAAA9G,KAAAmK,EAAA,CACA,IAAAH,EAAAG,EAAAnK,GAEA,GAAAgK,EAAA,CAIA,IAAAxG,EAAAwG,EAAApB,EAAA5I,EAAA8G,EAAAD,EAAA6B,EAAA,IAAA1I,EAAAqG,GAEA,GAAA7C,EACA,OAAAA,GAIA,eAzRA4G,MA+RA,SAAAD,GA8BA,OAAA9B,EA7BA,SAAAG,EAAAC,EAAA3B,EAAAD,EAAA6B,GACA,IAAAE,EAAAJ,EAAAC,GACAI,EAAAC,EAAAF,GAEA,cAAAC,EACA,WAAAF,EAAA,WAAA9B,EAAA,KAAA6B,EAAA,cAAAG,EAAA,kBAAA/B,EAAA,yBAKA,IAAAuD,EAAAxF,EAAA,GAAqC2D,EAAAC,GAAA0B,GAErC,QAAAnK,KAAAqK,EAAA,CACA,IAAAL,EAAAG,EAAAnK,GAEA,IAAAgK,EACA,WAAArB,EAAA,WAAA9B,EAAA,KAAA6B,EAAA,UAAA1I,EAAA,kBAAA8G,EAAA,mBAAA8C,KAAAC,UAAArB,EAAAC,GAAA,4BAAAmB,KAAAC,UAAApF,OAAAgB,KAAA0E,GAAA,YAGA,IAAA3G,EAAAwG,EAAApB,EAAA5I,EAAA8G,EAAAD,EAAA6B,EAAA,IAAA1I,EAAAqG,GAEA,GAAA7C,EACA,OAAAA,EAIA,gBA3RA,SAAAmF,EAAAvE,GACApD,KAAAoD,UACApD,KAAAkG,MAAA,GAMA,SAAAmB,EAAAiC,GAEA,IAAAC,EAAA,GACAC,EAAA,EAGA,SAAAC,EAAAC,EAAAlC,EAAAC,EAAA3B,EAAAD,EAAA6B,EAAAiC,GAIA,GAHA7D,KAAAY,EACAgB,KAAAD,EAEAkC,IAAAtE,EACA,GAAAgB,EAEArE,GAAA,4LACW,GAAwC,oBAAAqB,QAAA,CAEnD,IAAAuG,EAAA9D,EAAA,IAAA2B,GAEA8B,EAAAK,IACAJ,EAAA,IACA1G,GAAA,gTAAA4E,EAAA5B,GACAyD,EAAAK,IAAA,EACAJ,KAKA,aAAAhC,EAAAC,GACAiC,EACA,OAAAlC,EAAAC,GACA,IAAAE,EAAA,OAAA9B,EAAA,KAAA6B,EAAA,+BAAA5B,EAAA,+BAGA,IAAA6B,EAAA,OAAA9B,EAAA,KAAA6B,EAAA,+BAAA5B,EAAA,oCAGA,KAEAwD,EAAA9B,EAAAC,EAAA3B,EAAAD,EAAA6B,GAIA,IAAAmC,EAAAJ,EAAAK,KAAA,SAEA,OADAD,EAAAH,WAAAD,EAAAK,KAAA,SACAD,EAGA,SAAAhD,EAAAkD,GAgBA,OAAA1C,EAfA,SAAAG,EAAAC,EAAA3B,EAAAD,EAAA6B,EAAAiC,GACA,IAAA/B,EAAAJ,EAAAC,GAGA,GAFAK,EAAAF,KAEAmC,EAAA,CAIA,IAAAC,EAAAC,EAAArC,GACA,WAAAD,EAAA,WAAA9B,EAAA,KAAA6B,EAAA,cAAAsC,EAAA,kBAAAlE,EAAA,gBAAAiE,EAAA,MAGA,cA6NA,SAAAzB,EAAAV,GACA,cAAAA,GACA,aACA,aACA,gBACA,SAEA,cACA,OAAAA,EAEA,aACA,GAAAhJ,MAAAC,QAAA+I,GACA,OAAAA,EAAAsC,MAAA5B,GAGA,UAAAV,GAAAxB,EAAAwB,GACA,SAGA,IAAAuC,EA9ZA,SAAAC,GACA,IAAAD,EAAAC,IAAA9D,GAAA8D,EAAA9D,IAAA8D,EAAA3D,IAEA,sBAAA0D,EACA,OAAAA,EA0ZAE,CAAAzC,GAEA,IAAAuC,EAuBA,SAtBA,IACAG,EADA9D,EAAA2D,EAAAlL,KAAA2I,GAGA,GAAAuC,IAAAvC,EAAA2C,SACA,OAAAD,EAAA9D,EAAAgE,QAAAnK,MACA,IAAAiI,EAAAgC,EAAAhK,OACA,cAKA,OAAAgK,EAAA9D,EAAAgE,QAAAnK,MAAA,CACA,IAAAoK,EAAAH,EAAAhK,MAEA,GAAAmK,IACAnC,EAAAmC,EAAA,IACA,SASA,SAEA,QACA,UAwBA,SAAA3C,EAAAF,GACA,IAAAC,SAAAD,EAEA,OAAAhJ,MAAAC,QAAA+I,GACA,QAGAA,aAAA1H,OAIA,SA/BA,SAAA2H,EAAAD,GAEA,iBAAAC,IAKA,WAAAD,EAAA,kBAKA,mBAAArB,QAAAqB,aAAArB,QAsBAmE,CAAA7C,EAAAD,GACA,SAGAC,EAKA,SAAAoC,EAAArC,GACA,SAAAA,EACA,SAAAA,EAGA,IAAAC,EAAAC,EAAAF,GAEA,cAAAC,EAAA,CACA,GAAAD,aAAA+C,KACA,aACS,GAAA/C,aAAA1H,OACT,eAIA,OAAA2H,EAKA,SAAAoB,EAAA3I,GACA,IAAAsK,EAAAX,EAAA3J,GAEA,OAAAsK,GACA,YACA,aACA,YAAAA,EAEA,cACA,WACA,aACA,WAAAA,EAEA,QACA,OAAAA,GAeA,OA7aAjD,EAAAjE,UAAA3B,MAAA2B,UA2aAiD,EAAAkE,eAAAnF,EACAiB,EAAAmE,UAAAnE,EACAA,GAGAoE,EAAA5J,EAAA,SAAAhC,GAQA,IAAA6L,EAAA,mBAAAzE,eAAA,KAAAA,OAAA,4BASApH,EAAAC,QAAA+G,EAPA,SAAAc,GACA,uBAAAA,GAAA,OAAAA,KAAAgE,WAAAD,IAKA,KAIAE,EAAA/J,EAAA,SAAAhC,IAQA,WACA,IAAAjB,EAAA,GAAqBC,eAErB,SAAAC,IAGA,IAFA,IAAAC,EAAA,GAEAC,EAAA,EAAuBA,EAAAC,UAAAC,OAAsBF,IAAA,CAC7C,IAAAG,EAAAF,UAAAD,GACA,GAAAG,EAAA,CACA,IAAAC,SAAAD,EAEA,cAAAC,GAAA,WAAAA,EACAL,EAAAM,KAAAF,QACW,GAAAG,MAAAC,QAAAJ,GACXJ,EAAAM,KAAAP,EAAAW,MAAA,KAAAN,SACW,cAAAC,EACX,QAAAM,KAAAP,EACAP,EAAAe,KAAAR,EAAAO,IAAAP,EAAAO,IACAX,EAAAM,KAAAK,IAMA,OAAAX,EAAAa,KAAA,KAGkCC,EAAAC,QAClCD,EAAAC,QAAAhB,EAOA+M,OAAA/M,aAnCA,KAwCA,SAAAgN,EAAAxE,EAEAyE,GAKA,QAAA/M,EAAA,EAAAE,EAAAoI,EAAApI,OAA0CF,EAAAE,EAAYF,IACtD,GAAA+M,EAAAtM,MAAAsM,EAAA,CAAAzE,EAAAtI,KAAAsI,IAAA,OAAAA,EAAAtI,GAIA,SAAAgN,EAAAvE,GAKA,yBAAAA,GAAA,sBAAAtD,OAAAC,UAAA6H,SAAAtM,KAAA8H,GAGA,SAAAyE,EAAAC,GAKA,uBAAAA,IAAAC,MAAAD,GAGA,SAAAE,EAAAzJ,GAKA,OAAA0J,SAAA1J,EAAA,IAGA,SAAA2J,EAAArE,EAEAC,EAEA3B,GAGA,GAAA0B,EAAAC,GACA,WAAA1F,MAAA,gBAAA0F,EAAA,cAAA3B,EAAA,4CAIA,IAAAgG,EAAA,0BAsBA,SAAAC,EAAAC,EAEAC,GAKA,OAAAA,EAAA,GAAAA,EAGA,SAAAC,GAQA,IAHA,IAAAC,EAAA,GACAC,GAAA,EAEA9N,EAAA,EAAmBA,EAAA4N,EAAA1N,OAAgBF,IACnC8N,GACAD,GAAAD,EAAA5N,GAAA+N,cACAD,GAAA,GACO,MAAAF,EAAA5N,GACP8N,GAAA,EAEAD,GAAAD,EAAA5N,GAIA,OAAA6N,EAtBAG,CAAAN,KA4BA,IAAAO,EAvDA,WAGA,IAAAP,EAEAzN,UAAAC,OAAA,QAAAa,IAAAd,UAAA,GAAAA,UAAA,eAIA,uBAAA4M,aAAA,IAAAA,OAAAqB,SAAA,SACA,IAAAC,EAAAtB,OAAAqB,SAAAE,gBAAAD,MACA,GAAAT,KAAAS,EAAA,SAEA,QAAAnO,EAAA,EAAmBA,EAAAwN,EAAAtN,OAAqBF,IACxC,GAAAyN,EAAAC,EAAAF,EAAAxN,MAAAmO,EAAA,OAAAX,EAAAxN,GAGA,SAsCAqO,GAEAC,EAAA,SAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAA5H,UAAA,sCAIA6H,EAAA,WACA,SAAAC,EAAApI,EAAA4C,GACA,QAAAlJ,EAAA,EAAqBA,EAAAkJ,EAAAhJ,OAAkBF,IAAA,CACvC,IAAA2O,EAAAzF,EAAAlJ,GACA2O,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACA3J,OAAA4J,eAAAzI,EAAAqI,EAAAjO,IAAAiO,IAIA,gBAAAH,EAAAQ,EAAAC,GAGA,OAFAD,GAAAN,EAAAF,EAAApJ,UAAA4J,GACAC,GAAAP,EAAAF,EAAAS,GACAT,GAdA,GAkBAO,EAAA,SAAAG,EAAAxO,EAAAsB,GAYA,OAXAtB,KAAAwO,EACA/J,OAAA4J,eAAAG,EAAAxO,EAAA,CACAsB,QACA4M,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAI,EAAAxO,GAAAsB,EAGAkN,GAGAC,EAAAhK,OAAAK,QAAA,SAAAc,GACA,QAAAtG,EAAA,EAAmBA,EAAAC,UAAAC,OAAsBF,IAAA,CACzC,IAAAuG,EAAAtG,UAAAD,GAEA,QAAAU,KAAA6F,EACApB,OAAAC,UAAAvF,eAAAc,KAAA4F,EAAA7F,KACA4F,EAAA5F,GAAA6F,EAAA7F,IAKA,OAAA4F,GAGA8I,EAAA,SAAAC,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAA1I,UAAA,kEAAA0I,GAGAD,EAAAjK,UAAAD,OAAAoK,OAAAD,KAAAlK,UAAA,CACA0E,YAAA,CACA9H,MAAAqN,EACAT,YAAA,EACAE,UAAA,EACAD,cAAA,KAGAS,IAAAnK,OAAAqK,eAAArK,OAAAqK,eAAAH,EAAAC,GAAAD,EAAAI,UAAAH,IAGAI,EAAA,SAAAC,EAAAhP,GACA,IAAAgP,EACA,UAAAC,eAAA,6DAGA,OAAAjP,GAAA,iBAAAA,GAAA,mBAAAA,EAAAgP,EAAAhP,GAGAkP,EA2BA,SAAAC,EAAA9P,GACA,GAAAM,MAAAC,QAAAuP,GACA,OAAAA,EACO,GAAA7H,OAAAC,YAAA/C,OAAA2K,GACP,OA9BA,SAAAA,EAAA9P,GACA,IAAA+P,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,OAAAnP,EAEA,IACA,QAAAoP,EAAAC,EAAAN,EAAA7H,OAAAC,cAAiD8H,GAAAG,EAAAC,EAAAlE,QAAAnK,QACjDgO,EAAA1P,KAAA8P,EAAAnO,QAEAhC,GAAA+P,EAAA7P,SAAAF,GAHgFgQ,GAAA,IAKzE,MAAA5J,GACP6J,GAAA,EACAC,EAAA9J,EACO,QACP,KACA4J,GAAAI,EAAA,QAAAA,EAAA,SACS,QACT,GAAAH,EAAA,MAAAC,GAIA,OAAAH,EAOAM,CAAAP,EAAA9P,GAEA,UAAA4G,UAAA,yDAOA0J,EAAA,GAEA,SAAAC,EAAAC,EAEAC,GAcA,OATAH,IACAA,EAAAxD,EAAA,yGAAA4D,GAEA,OAAA1D,EAAAwD,EAAAE,SAMA1D,EAAAwD,EAAAF,KAEAE,EAAAF,GAAAG,GAIA,SAAAE,EAAAH,EAEAC,EAEAG,GAKA,IAAA7G,EAAAyG,EAEA,GACA,GAAAD,EAAAxG,EAAA0G,GAAA,SACA,GAAA1G,IAAA6G,EAAA,SACA7G,IAAA8G,iBACK9G,GAEL,SAGA,SAAA+G,EAAAN,EAEAO,EAEAC,GAKAR,IAIAA,EAAAS,YACAT,EAAAS,YAAA,KAAAF,EAAAC,GACKR,EAAAU,iBACLV,EAAAU,iBAAAH,EAAAC,GAAA,GAGAR,EAAA,KAAAO,GAAAC,GAIA,SAAAG,EAAAX,EAEAO,EAEAC,GAKAR,IAIAA,EAAAY,YACAZ,EAAAY,YAAA,KAAAL,EAAAC,GACKR,EAAAa,oBACLb,EAAAa,oBAAAN,EAAAC,GAAA,GAGAR,EAAA,KAAAO,GAAA,MAIA,SAAAO,EAAAvH,GAOA,IAAAwH,EAAAxH,EAAAyH,aACAC,EAAA1H,EAAA2H,cAAAC,YAAAC,iBAAA7H,GAGA,OAFAwH,GAAAlE,EAAAoE,EAAAI,gBACAN,GAAAlE,EAAAoE,EAAAK,mBAIA,SAAAC,EAAAhI,GAOA,IAAAiI,EAAAjI,EAAAkI,YACAR,EAAA1H,EAAA2H,cAAAC,YAAAC,iBAAA7H,GAGA,OAFAiI,GAAA3E,EAAAoE,EAAAS,iBACAF,GAAA3E,EAAAoE,EAAAU,kBAIA,SAAAC,EAAArI,GAKA,IAAAwH,EAAAxH,EAAAyH,aACAC,EAAA1H,EAAA2H,cAAAC,YAAAC,iBAAA7H,GAGA,OAFAwH,GAAAlE,EAAAoE,EAAAY,YACAd,GAAAlE,EAAAoE,EAAAa,eAIA,SAAAC,EAAAxI,GAKA,IAAAiI,EAAAjI,EAAAkI,YACAR,EAAA1H,EAAA2H,cAAAC,YAAAC,iBAAA7H,GAGA,OAFAiI,GAAA3E,EAAAoE,EAAAe,aACAR,GAAA3E,EAAAoE,EAAAgB,cA+CA,SAAAC,EAAAC,EAAAC,EAEAC,GAKA,IAAA7N,EAAA2N,EAAA3N,EACAoF,EAAAuI,EAAAvI,EACA0I,EAAA,aAAA9N,EAAA6N,EAAA,IAAAzI,EAAAyI,EAAA,IAEA,GAAAD,EAAA,CACA,IAAAG,EAAA,qBAAAH,EAAA5N,EAAA4N,EAAA5N,EAAA4N,EAAA5N,EAAA6N,GACAG,EAAA,qBAAAJ,EAAAxI,EAAAwI,EAAAxI,EAAAwI,EAAAxI,EAAAyI,GACAC,EAAA,aAAAC,EAAA,KAAAC,EAAA,IAAAF,EAGA,OAAAA,EA8BA,SAAAG,EAAAC,GAGA,GAAAA,EAAA,CACA,IA2CA1C,EAEA2C,EA7CAC,EAAAF,EAAAG,eAAA,4BAEAD,KACAA,EAAAF,EAAAI,cAAA,UACAhH,KAAA,WACA8G,EAAAG,GAAA,2BACAH,EAAAI,UAAA,wFACAJ,EAAAI,WAAA,mFACAN,EAAAO,qBAAA,WAAAC,YAAAN,IAGAF,EAAAS,OAgCAnD,EAhCA0C,EAAAS,KAkCAR,EAlCA,wCAqCA3C,EAAAoD,UACApD,EAAAoD,UAAAC,IAAAV,GAEA3C,EAAA2C,UAAAW,MAAA,IAAAlS,OAAA,YAAAuR,EAAA,cACA3C,EAAA2C,WAAA,IAAAA,KAtCA,SAAAY,EAAAb,GAGA,IACAA,KAAAS,OAuCAnD,EAvCA0C,EAAAS,KAyCAR,EAzCA,wCA4CA3C,EAAAoD,UACApD,EAAAoD,UAAAI,OAAAb,GAEA3C,EAAA2C,UAAA3C,EAAA2C,UAAA9O,QAAA,IAAAzC,OAAA,YAAAuR,EAAA,oBA7CAD,EAAAe,UAEAf,EAAAe,UAAAC,QAEArH,OAAAsH,eAAAC,kBAEK,MAAApQ,IA+BL,IAAAwM,EAEA2C,EA7BA,SAAAkB,IAGA,IAAAC,EAEArU,UAAAC,OAAA,QAAAa,IAAAd,UAAA,GAAAA,UAAA,MAGA,OAAAkP,EAAA,CACAoF,YAAA,QACKD,GAoGL,SAAAE,EAAAC,GAKA,eAAAA,EAAAvL,MAAAwL,MAAA,MAAAD,EAAAvL,MAAAwL,KAGA,SAAAC,EAAAF,GAKA,eAAAA,EAAAvL,MAAAwL,MAAA,MAAAD,EAAAvL,MAAAwL,KAIA,SAAAE,EAAA5Q,EAEA6Q,EAEAC,GAKA,IAAAC,EAAA,iBAAAF,EArMA,SAAA7Q,EAEAgR,GAKA,OAAAhR,EAAAiR,eAAAnI,EAAA9I,EAAAiR,cAAA,SAAAC,GACA,OAAAF,IAAAE,EAAAF,cACKhR,EAAAmR,gBAAArI,EAAA9I,EAAAmR,eAAA,SAAAD,GACL,OAAAF,IAAAE,EAAAF,aA2LAI,CAAApR,EAAA6Q,GAAA,KACA,oBAAAA,IAAAE,EAAA,YAEA,IAAAhL,EAAAsL,GAAAP,GAEAQ,EAAAR,EAAA5L,MAAAoM,cAAAvL,EAAAuL,cAAAvL,EAAA2H,cAAAiC,KACA,OAzQA,SAAA4B,EAEAD,GAKA,IACAE,EADAF,MAAA5D,cAAAiC,KACA,CACA8B,KAAA,EACAC,IAAA,GACKJ,EAAAK,wBACL3Q,EAAAuQ,EAAAK,QAAAN,EAAAO,WAAAL,EAAAC,KACArL,EAAAmL,EAAAO,QAAAR,EAAAS,UAAAP,EAAAE,IACA,OACA1Q,IACAoF,KAyPA4L,CAAAjB,GAAA/Q,EAAAsR,GAIA,SAAAW,EAAAxB,EAEAzP,EAEAoF,GAKA,IAAA8L,EAAAzB,EAAAyB,MACAC,GAAAjJ,EAAAgJ,EAAAE,OACArM,EAAAsL,GAAAZ,GAEA,OAAA0B,EAEA,CACApM,OACAsM,OAAA,EACAC,OAAA,EACAF,MAAApR,EACAuR,MAAAnM,EACApF,IACAoF,KAIA,CACAL,OACAsM,OAAArR,EAAAkR,EAAAE,MACAE,OAAAlM,EAAA8L,EAAAK,MACAH,MAAAF,EAAAE,MACAG,MAAAL,EAAAK,MACAvR,IACAoF,KAMA,SAAAoM,GAAA/B,EAEAgC,GAKA,IAAAC,EAAAjC,EAAAvL,MAAAwN,MACA,OACA3M,KAAA0M,EAAA1M,KACA/E,EAAAyP,EAAAyB,MAAAlR,EAAAyR,EAAAJ,OAAAK,EACAtM,EAAAqK,EAAAyB,MAAA9L,EAAAqM,EAAAH,OAAAI,EACAL,OAAAI,EAAAJ,OAAAK,EACAJ,OAAAG,EAAAH,OAAAI,EACAN,MAAA3B,EAAAyB,MAAAlR,EACAuR,MAAA9B,EAAAyB,MAAA9L,GAkBA,SAAAiL,GAAAZ,GAKA,IAAA1K,EAAApH,EAAA0S,YAAAZ,GAEA,IAAA1K,EACA,UAAAtG,MAAA,4CAIA,OAAAsG,EAYA,IAAA4M,GAAA,CACAC,MAAA,CACAC,MAAA,aACAC,KAAA,YACAC,KAAA,YAEAC,MAAA,CACAH,MAAA,YACAC,KAAA,YACAC,KAAA,YAIAE,GAAAN,GAAAK,MAiDAE,GAAA,SAAAC,GAGA,SAAAD,IACA,IAAAE,EAEAC,EAAAC,EAEAhJ,EAAA5M,KAAAwV,GAEA,QAAAtS,EAAA3E,UAAAC,OAAAiE,EAAA7D,MAAAsE,GAAAC,EAAA,EAAqEA,EAAAD,EAAaC,IAClFV,EAAAU,GAAA5E,UAAA4E,GAGA,OAAAyS,EAAA5H,EAAAhO,MAAA0V,EAAAF,EAAAzH,WAAAtK,OAAAoS,eAAAL,IAAAvW,KAAAF,MAAA2W,EAAA,CAAA1V,MAAAuD,OAAAd,KAAAkT,EAAAC,IAAApB,MAAA,CACAsB,UAAA,EAEApB,MAAAqB,IACAlB,MAAAkB,IACA5C,gBAAA,MACOyC,EAAAI,gBAAA,SAAA1T,GAKP,GAHAsT,EAAApO,MAAAyO,YAAA3T,IAGAsT,EAAApO,MAAA0O,eAAA,iBAAA5T,EAAA6T,QAAA,IAAA7T,EAAA6T,OAAA,SAEA,IAAAC,EAAAnV,EAAA0S,YAAAiC,GAEA,IAAAQ,MAAApG,gBAAAoG,EAAApG,cAAAiC,KACA,UAAAlQ,MAAA,6CAGA,IAAAiO,EAAAoG,EAAApG,cAEA,KAAA4F,EAAApO,MAAA6O,YAAA/T,EAAAsC,kBAAAoL,EAAAC,YAAAqG,OAAAV,EAAApO,MAAA+O,SAAAtH,EAAA3M,EAAAsC,OAAAgR,EAAApO,MAAA+O,OAAAH,IAAAR,EAAApO,MAAAgP,QAAAvH,EAAA3M,EAAAsC,OAAAgR,EAAApO,MAAAgP,OAAAJ,IAAA,CAOA,IAAAjD,EAzYA,SAAA7Q,GAKA,OAAAA,EAAAiR,eAAAjR,EAAAiR,cAAA,GAAAjR,EAAAiR,cAAA,GAAAD,WACAhR,EAAAmR,gBAAAnR,EAAAmR,eAAA,GAAAnR,EAAAmR,eAAA,GAAAH,gBAAA,EAmYAmD,CAAAnU,GAEAsT,EAAAc,SAAA,CACAvD,oBAIA,IAAAwD,EAAAzD,EAAA5Q,EAAA6Q,EAAAyC,GACA,SAAAe,EAAA,CAEA,IAAArT,EAAAqT,EAAArT,EACAoF,EAAAiO,EAAAjO,EAEAkO,EAAArC,EAAAqB,EAAAtS,EAAAoF,GAEAkN,EAAApO,MAAAqP,QAEA,IAAAC,EAAAlB,EAAApO,MAAAqP,QAAAvU,EAAAsU,IAEA,IAAAE,IAGAlB,EAAApO,MAAAuP,sBAAAxF,EAAAvB,GAIA4F,EAAAc,SAAA,CACAZ,UAAA,EACApB,MAAApR,EACAuR,MAAAnM,IAMA0G,EAAAY,EAAAuF,GAAAH,KAAAQ,EAAAoB,YACA5H,EAAAY,EAAAuF,GAAAF,KAAAO,EAAAqB,oBACOrB,EAAAoB,WAAA,SAAA1U,GAEP,cAAAA,EAAAsI,MAAAtI,EAAA4U,iBAEA,IAAAP,EAAAzD,EAAA5Q,EAAAsT,EAAApB,MAAArB,gBAAAyC,GACA,SAAAe,EAAA,CACA,IAAArT,EAAAqT,EAAArT,EACAoF,EAAAiO,EAAAjO,EAEA,GAAA9J,MAAAC,QAAA+W,EAAApO,MAAA2P,MAAA,CACA,IAAAC,EAAA9T,EAAAsS,EAAApB,MAAAE,MACA2C,EAAA3O,EAAAkN,EAAApB,MAAAK,MAEAyC,EA5SA,SAAAH,EAEAI,EAEAC,GAKA,IAAAlU,EAAAmU,KAAAC,MAAAH,EAAAJ,EAAA,IAAAA,EAAA,GACAzO,EAAA+O,KAAAC,MAAAF,EAAAL,EAAA,IAAAA,EAAA,GACA,OAAA7T,EAAAoF,GAiSAiP,CAAA/B,EAAApO,MAAA2P,KAAAC,EAAAC,GAEAO,EAAAzJ,EAAAmJ,EAAA,GAIA,GAFAF,EAAAQ,EAAA,GACAP,EAAAO,EAAA,IACAR,IAAAC,EAAA,OAEA/T,EAAAsS,EAAApB,MAAAE,MAAA0C,EAAA1O,EAAAkN,EAAApB,MAAAK,MAAAwC,EAGA,IAAAT,EAAArC,EAAAqB,EAAAtS,EAAAoF,GAEAoO,EAAAlB,EAAApO,MAAAqQ,OAAAvV,EAAAsU,GAEA,QAAAE,EAmBAlB,EAAAc,SAAA,CACAhC,MAAApR,EACAuR,MAAAnM,SApBA,IAEAkN,EAAAqB,eAAA,IAAAa,WAAA,YACW,MAAApT,GAEX,IAAA2K,EAAA7C,SAAAuL,YAAA,eAKA1I,EAAA2I,eAAA,gBAAA7M,OAAA,8BAEAyK,EAAAqB,eAAA5H,MAUOuG,EAAAqB,eAAA,SAAA3U,GACP,GAAAsT,EAAApB,MAAAsB,SAAA,CACA,IAAAa,EAAAzD,EAAA5Q,EAAAsT,EAAApB,MAAArB,gBAAAyC,GACA,SAAAe,EAAA,CACA,IAAArT,EAAAqT,EAAArT,EACAoF,EAAAiO,EAAAjO,EACAkO,EAAArC,EAAAqB,EAAAtS,EAAAoF,GACA0N,EAAAnV,EAAA0S,YAAAiC,GAEAQ,GAEAR,EAAApO,MAAAuP,sBAAA1E,EAAA+D,EAAApG,eAIA4F,EAAAc,SAAA,CACAZ,UAAA,EACApB,MAAAqB,IACAlB,MAAAkB,MAIAH,EAAApO,MAAAyQ,OAAA3V,EAAAsU,GAEAR,IACA3G,EAAA2G,EAAApG,cAAAuF,GAAAH,KAAAQ,EAAAoB,YACAvH,EAAA2G,EAAApG,cAAAuF,GAAAF,KAAAO,EAAAqB,oBAEOrB,EAAAK,YAAA,SAAA3T,GAGP,OAFAiT,GAAAN,GAAAK,MAEAM,EAAAI,gBAAA1T,IACOsT,EAAAsC,UAAA,SAAA5V,GAEP,OADAiT,GAAAN,GAAAK,MACAM,EAAAqB,eAAA3U,IACOsT,EAAAuC,aAAA,SAAA7V,GAGP,OADAiT,GAAAN,GAAAC,MACAU,EAAAI,gBAAA1T,IACOsT,EAAAwC,WAAA,SAAA9V,GAGP,OADAiT,GAAAN,GAAAC,MACAU,EAAAqB,eAAA3U,IACO0L,EAAA4H,EAAAD,GAoCP,OAhNAjI,EAAA8H,EAAAC,GA+KA1I,EAAAyI,EAAA,EACAxW,IAAA,uBACAsB,MAAA,WAGA,IAAA8V,EAAAnV,EAAA0S,YAAA3T,MAEA,GAAAoW,EAAA,CACA,IAAApG,EAAAoG,EAAApG,cACAP,EAAAO,EAAAiF,GAAAK,MAAAF,KAAApV,KAAAgX,YACAvH,EAAAO,EAAAiF,GAAAC,MAAAE,KAAApV,KAAAgX,YACAvH,EAAAO,EAAAiF,GAAAK,MAAAD,KAAArV,KAAAiX,gBACAxH,EAAAO,EAAAiF,GAAAC,MAAAG,KAAArV,KAAAiX,gBACAjX,KAAAwH,MAAAuP,sBAAA1E,EAAArC,MAIK,CACLhR,IAAA,SACAsB,MAAA,WAGA,OAAAY,EAAAmX,aAAAnX,EAAAoX,SAAAC,KAAAvY,KAAAwH,MAAAgR,UAAA,CACA/L,MAAAkG,EAAA3S,KAAAwH,MAAAgR,SAAAhR,MAAAiF,OAGAwJ,YAAAjW,KAAAiW,YACAkC,aAAAnY,KAAAmY,aACAD,UAAAlY,KAAAkY,UACAE,WAAApY,KAAAoY,iBAIA5C,EAjNA,CAkNGtU,EAAAuX,WAEHjD,GAAAkD,YAAA,gBACAlD,GAAAzK,UAAA,CAOAmL,cAAAnL,EAAAjE,KAMAuP,SAAAtL,EAAAjE,KAOAiQ,qBAAAhM,EAAAjE,KAMA8M,aAAA,SAAApM,EAEAC,GAGA,GAAAD,EAAAC,IAAA,IAAAD,EAAAC,GAAAkR,SACA,UAAA5W,MAAA,iDAOAoV,KAAApM,EAAAzD,QAAAyD,EAAA/D,QAMAgO,MAAAjK,EAAA/D,OAsBAuP,OAAAxL,EAAA7D,OAsBAsP,OAAAzL,EAAA7D,OAMA2P,QAAA9L,EAAAhE,KAMA8Q,OAAA9M,EAAAhE,KAMAkR,OAAAlN,EAAAhE,KAMAkP,YAAAlL,EAAAhE,KAKA0K,UAAA5F,EACAY,MAAAZ,EACA+M,UAAA/M,GAEA2J,GAAAqD,aAAA,CACA3C,eAAA,EAEAM,OAAA,KACAH,UAAA,EACAU,sBAAA,EACAnD,aAAA,KACA2C,OAAA,KACAY,KAAA,KACAyB,UAAA,KACA/B,QAAA,aACAgB,OAAA,aACAI,OAAA,aACAhC,YAAA,cA8BA,IAAA6C,GAAA,SAAArD,GAGA,SAAAqD,EAAAtR,GAGAoF,EAAA5M,KAAA8Y,GAEA,IAAAlD,EAAA5H,EAAAhO,MAAA8Y,EAAA/K,WAAAtK,OAAAoS,eAAAiD,IAAA7Z,KAAAe,KAAAwH,IAsGA,OApGAoO,EAAAmD,YAAA,SAAAzW,EAAAyS,GAEA,IAAAiE,EAAApD,EAAApO,MAAAqP,QAAAvU,EAAAwS,GAAAc,EAAAb,IAGA,QAAAiE,EAAA,SAEApD,EAAAc,SAAA,CACAZ,UAAA,EACAmD,SAAA,KAIArD,EAAAiC,OAAA,SAAAvV,EAAAyS,GACA,IAAAa,EAAApB,MAAAsB,SAAA,SACA,IAAAoD,EAAApE,GAAAc,EAAAb,GACAoE,EAEA,CACA7V,EAAA4V,EAAA5V,EACAoF,EAAAwQ,EAAAxQ,GAGA,GAAAkN,EAAApO,MAAA4R,OAAA,CAEA,IAAAC,EAAAF,EAAA7V,EACAgW,EAAAH,EAAAzQ,EAIAyQ,EAAA7V,GAAAsS,EAAApB,MAAA+E,OACAJ,EAAAzQ,GAAAkN,EAAApB,MAAAgF,OAEA,IAAAC,EAxqBA,SAAA1G,EAEAzP,EAEAoF,GAMA,IAAAqK,EAAAvL,MAAA4R,OAAA,OAAA9V,EAAAoF,GAEA,IAAA0Q,EAAArG,EAAAvL,MAAA4R,OACAA,EAAA,iBAAAA,IAmJA,SAAAA,GAKA,OACArF,KAAAqF,EAAArF,KACAC,IAAAoF,EAAApF,IACA0F,MAAAN,EAAAM,MACAC,OAAAP,EAAAO,QA5JAC,CAAAR,GACA,IAAA/Q,EAAAsL,GAAAZ,GAEA,oBAAAqG,EAAA,CACA,IAAApJ,EAAA3H,EAAA2H,cACA6J,EAAA7J,EAAAC,YACA6J,OAAA,EAQA,MALAA,EADA,WAAAV,EACA/Q,EAAA8G,WAEAa,EAAA+J,cAAAX,cAGAS,EAAAG,aACA,UAAAjY,MAAA,oBAAAqX,EAAA,gCAGA,IAAAa,EAAAJ,EAAA3J,iBAAA7H,GACA6R,EAAAL,EAAA3J,iBAAA4J,GAEAV,EAAA,CACArF,MAAA1L,EAAA8R,WAAAxO,EAAAuO,EAAApJ,aAAAnF,EAAAsO,EAAAG,YACApG,KAAA3L,EAAAgS,UAAA1O,EAAAuO,EAAAvJ,YAAAhF,EAAAsO,EAAAK,WACAZ,MAAA7I,EAAAiJ,GAAAzJ,EAAAhI,KAAA8R,WAAAxO,EAAAuO,EAAAnJ,cAAApF,EAAAsO,EAAAM,aACAZ,OAAAjJ,EAAAoJ,GAAAlK,EAAAvH,KAAAgS,UAAA1O,EAAAuO,EAAAtJ,eAAAjF,EAAAsO,EAAAO,eAUA,OALAhP,EAAA4N,EAAAM,SAAApW,EAAAmU,KAAAgD,IAAAnX,EAAA8V,EAAAM,QACAlO,EAAA4N,EAAAO,UAAAjR,EAAA+O,KAAAgD,IAAA/R,EAAA0Q,EAAAO,SAEAnO,EAAA4N,EAAArF,QAAAzQ,EAAAmU,KAAAiD,IAAApX,EAAA8V,EAAArF,OACAvI,EAAA4N,EAAApF,OAAAtL,EAAA+O,KAAAiD,IAAAhS,EAAA0Q,EAAApF,MACA,CAAA1Q,EAAAoF,GAwnBAiS,CAAA/E,EAAAuD,EAAA7V,EAAA6V,EAAAzQ,GACAkS,EAAAzM,EAAAsL,EAAA,GACAoB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAzB,EAAA7V,EAAAuX,EACA1B,EAAAzQ,EAAAoS,EAEA3B,EAAAI,OAAA3D,EAAApB,MAAA+E,QAAAF,EAAAF,EAAA7V,GACA6V,EAAAK,OAAA5D,EAAApB,MAAAgF,QAAAF,EAAAH,EAAAzQ,GAEAwQ,EAAA5V,EAAA6V,EAAA7V,EACA4V,EAAAxQ,EAAAyQ,EAAAzQ,EACAwQ,EAAAvE,OAAAwE,EAAA7V,EAAAsS,EAAApB,MAAAlR,EACA4V,EAAAtE,OAAAuE,EAAAzQ,EAAAkN,EAAApB,MAAA9L,EAIA,IAAAoO,EAAAlB,EAAApO,MAAAqQ,OAAAvV,EAAA4W,GAEA,QAAApC,EAAA,SAEAlB,EAAAc,SAAAyC,IAGAvD,EAAAmF,WAAA,SAAAzY,EAAAyS,GACA,IAAAa,EAAApB,MAAAsB,SAAA,SAEA,IAAAkF,EAAApF,EAAApO,MAAAyQ,OAAA3V,EAAAwS,GAAAc,EAAAb,IAEA,QAAAiG,EAAA,SACA,IAAA7B,EAEA,CACArD,UAAA,EACAyD,OAAA,EACAC,OAAA,GAIAyB,EAAAC,QAAAtF,EAAApO,MAAAmP,UAEA,GAAAsE,EAAA,CACA,IAAAE,EAAAvF,EAAApO,MAAAmP,SACAyE,EAAAD,EAAA7X,EACA+X,EAAAF,EAAAzS,EACAyQ,EAAA7V,EAAA8X,EACAjC,EAAAzQ,EAAA2S,EAGAzF,EAAAc,SAAAyC,IAGAvD,EAAApB,MAAA,CAEAsB,UAAA,EAEAmD,SAAA,EAEA3V,EAAAkE,EAAAmP,SAAAnP,EAAAmP,SAAArT,EAAAkE,EAAA8T,gBAAAhY,EACAoF,EAAAlB,EAAAmP,SAAAnP,EAAAmP,SAAAjO,EAAAlB,EAAA8T,gBAAA5S,EAEA6Q,OAAA,EACAC,OAAA,EAEA+B,cAAA,GAEA3F,EA2FA,OAxMAlI,EAAAoL,EAAArD,GAgHA1I,EAAA+L,EAAA,EACA9Z,IAAA,qBACAsB,MAAA,YACAN,KAAAwH,MAAAmP,UAAA3W,KAAAwH,MAAAqQ,QAAA7X,KAAAwH,MAAAyQ,QAEA5U,QAAAmY,KAAA,+NAGK,CACLxc,IAAA,oBACAsB,MAAA,gBAEA,IAAA6K,OAAAsQ,YAAAxa,EAAA0S,YAAA3T,gBAAAmL,OAAAsQ,YACAzb,KAAA0W,SAAA,CACA6E,cAAA,MAIK,CACLvc,IAAA,4BACAsB,MAAA,SAAAob,IAIAA,EAAA/E,UAAA3W,KAAAwH,MAAAmP,UAAA+E,EAAA/E,SAAArT,IAAAtD,KAAAwH,MAAAmP,SAAArT,GAAAoY,EAAA/E,SAAAjO,IAAA1I,KAAAwH,MAAAmP,SAAAjO,GACA1I,KAAA0W,SAAA,CACApT,EAAAoY,EAAA/E,SAAArT,EACAoF,EAAAgT,EAAA/E,SAAAjO,MAIK,CACL1J,IAAA,uBACAsB,MAAA,WACAN,KAAA0W,SAAA,CACAZ,UAAA,MAGK,CACL9W,IAAA,SACAsB,MAAA,WAGA,IAAAqb,EAl6BAC,EAEA1K,EAk6BAzE,EAAA,GACAoP,EAAA,KAEAZ,EAAAC,QAAAlb,KAAAwH,MAAAmP,UACA5D,GAAAkI,GAAAjb,KAAAwU,MAAAsB,SACAa,EAAA3W,KAAAwH,MAAAmP,UAAA3W,KAAAwH,MAAA8T,gBACAQ,EAAA,CAEAxY,EAAAwP,EAAA9S,OAAA+S,EAAA/S,KAAAwU,MAAAlR,EAAAqT,EAAArT,EAEAoF,EAAAuK,EAAAjT,OAAA+S,EAAA/S,KAAAwU,MAAA9L,EAAAiO,EAAAjO,GAGA1I,KAAAwU,MAAA+G,cAj7BAK,EAk7BAE,EAh7BA5K,EAg7BAlR,KAAAwH,MAAA0J,eAAA2K,EA36BA7K,EAAA4K,EAAA1K,EAAA,KAi7BAzE,EAn8BA,SAAAmP,EAEA1K,GAKA,IAAAE,EAAAJ,EAAA4K,EAAA1K,EAAA,MACA,OAAA7D,EAAA,GAA4BtB,EAAA,YAAAQ,GAAA6E,GA27B5B2K,CAAAD,EAAA9b,KAAAwH,MAAA0J,gBAGA,IAAA8K,EAAAhc,KAAAwH,MACAyU,EAAAD,EAAAC,iBACAC,EAAAF,EAAAE,yBACAC,EAAAH,EAAAG,wBACA3D,EAAAtX,EAAAoX,SAAAC,KAAAvY,KAAAwH,MAAAgR,UAEA/G,EAAAvG,EAAAsN,EAAAhR,MAAAiK,WAAA,GAAAwK,GAAsG5O,EAAtGsO,EAAA,GAAsGO,EAAAlc,KAAAwU,MAAAsB,UAAAzI,EAAAsO,EAAAQ,EAAAnc,KAAAwU,MAAAyE,SAAA0C,IAGtG,OAAAza,EAAA0Q,cAAA4D,GAAA/H,EAAA,GAA6DzN,KAAAwH,MAAA,CAC7DqP,QAAA7W,KAAA+Y,YACAlB,OAAA7X,KAAA6X,OACAI,OAAAjY,KAAA+a,aACS7Z,EAAAmX,aAAAG,EAAA,CACT/G,YACAhF,MAAAgB,EAAA,GAA4B+K,EAAAhR,MAAAiF,SAC5BmM,UAAAiD,SAIA/C,EAzMA,CA0MG5X,EAAAuX,WAoIH,OAlIAK,GAAAJ,YAAA,YACAI,GAAA/N,UAAA0C,EAAA,GAAmC+H,GAAAzK,UAAA,CAcnCiI,KAAAjI,EAAAvC,MAAA,yBA4BA4Q,OAAArO,EAAAjC,UAAA,CAAAiC,EAAA7B,MAAA,CACA6K,KAAAhJ,EAAA/D,OACA0S,MAAA3O,EAAA/D,OACAgN,IAAAjJ,EAAA/D,OACA2S,OAAA5O,EAAA/D,SACK+D,EAAA7D,OAAA6D,EAAAvC,MAAA,QACLyT,iBAAAlR,EAAA7D,OACAgV,yBAAAnR,EAAA7D,OACAiV,wBAAApR,EAAA7D,OAmBAoU,gBAAAvQ,EAAA7B,MAAA,CACA5F,EAAAyH,EAAA/D,OACA0B,EAAAqC,EAAA/D,SAEAkK,eAAAnG,EAAA7B,MAAA,CACA5F,EAAAyH,EAAAjC,UAAA,CAAAiC,EAAA/D,OAAA+D,EAAA7D,SACAwB,EAAAqC,EAAAjC,UAAA,CAAAiC,EAAA/D,OAAA+D,EAAA7D,WAuBAyP,SAAA5L,EAAA7B,MAAA,CACA5F,EAAAyH,EAAA/D,OACA0B,EAAAqC,EAAA/D,SAMAyK,UAAA5F,EACAY,MAAAZ,EACA+M,UAAA/M,IAEAiN,GAAAD,aAAApL,EAAA,GAAsC+H,GAAAqD,aAAA,CACtC7F,KAAA,OACAoG,QAAA,EACA6C,iBAAA,kBACAC,yBAAA,2BACAC,wBAAA,0BACAb,gBAAA,CACAhY,EAAA,EACAoF,EAAA,GAEAiO,SAAA,KACA3B,MAAA,IAMA8D,GAAA,QAAAA,GACAA,GAAAtD,iBACAsD,GA94E8DsD,CAA4Bne,EAAQ,IAAcA,EAAQ","file":"7-3d23ad8ff558058ef31a.js","sourcesContent":["require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","require(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react-dom'), require('react')) : typeof define === 'function' && define.amd ? define(['react-dom', 'react'], factory) : global.ReactDraggable = factory(global.ReactDOM, global.React);\n})(this, function (ReactDOM, React) {\n  'use strict';\n\n  ReactDOM = ReactDOM && ReactDOM.hasOwnProperty('default') ? ReactDOM['default'] : ReactDOM;\n  React = React && React.hasOwnProperty('default') ? React['default'] : React;\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n\n  function makeEmptyFunction(arg) {\n    return function () {\n      return arg;\n    };\n  }\n  /**\n   * This function accepts and discards inputs; it has no side effects. This is\n   * primarily useful idiomatically for overridable function endpoints which\n   * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n   */\n\n\n  var emptyFunction = function emptyFunction() {};\n\n  emptyFunction.thatReturns = makeEmptyFunction;\n  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n  emptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\n  emptyFunction.thatReturnsThis = function () {\n    return this;\n  };\n\n  emptyFunction.thatReturnsArgument = function (arg) {\n    return arg;\n  };\n\n  var emptyFunction_1 = emptyFunction;\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   */\n\n  /**\n   * Use invariant() to assert state which your program assumes to be true.\n   *\n   * Provide sprintf-style format (only %s is supported) and arguments\n   * to provide information about what broke and what you were\n   * expecting.\n   *\n   * The invariant message will be stripped in production, but the invariant\n   * will remain to ensure logic does not differ in production.\n   */\n\n  var validateFormat = function validateFormat(format) {};\n\n  {\n    validateFormat = function validateFormat(format) {\n      if (format === undefined) {\n        throw new Error('invariant requires an error message argument');\n      }\n    };\n  }\n\n  function invariant(condition, format, a, b, c, d, e, f) {\n    validateFormat(format);\n\n    if (!condition) {\n      var error;\n\n      if (format === undefined) {\n        error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n      } else {\n        var args = [a, b, c, d, e, f];\n        var argIndex = 0;\n        error = new Error(format.replace(/%s/g, function () {\n          return args[argIndex++];\n        }));\n        error.name = 'Invariant Violation';\n      }\n\n      error.framesToPop = 1; // we don't care about invariant's own frame\n\n      throw error;\n    }\n  }\n\n  var invariant_1 = invariant;\n  /**\n   * Similar to invariant but only logs a warning if the condition is not met.\n   * This can be used to log issues in development environments in critical\n   * paths. Removing the logging code for production environments will keep the\n   * same logic and follow the same code paths.\n   */\n\n  var warning = emptyFunction_1;\n  {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  }\n  var warning_1 = warning;\n  /*\n  object-assign\n  (c) Sindre Sorhus\n  @license MIT\n  */\n\n  /* eslint-disable no-unused-vars */\n\n  var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n  function toObject(val) {\n    if (val === null || val === undefined) {\n      throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n\n    return Object(val);\n  }\n\n  function shouldUseNative() {\n    try {\n      if (!Object.assign) {\n        return false;\n      } // Detect buggy property enumeration order in older V8 versions.\n      // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n      var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n      test1[5] = 'de';\n\n      if (Object.getOwnPropertyNames(test1)[0] === '5') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test2 = {};\n\n      for (var i = 0; i < 10; i++) {\n        test2['_' + String.fromCharCode(i)] = i;\n      }\n\n      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n        return test2[n];\n      });\n\n      if (order2.join('') !== '0123456789') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test3 = {};\n      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n        test3[letter] = letter;\n      });\n\n      if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      // We don't expect any of the above to throw, but better to be safe.\n      return false;\n    }\n  }\n\n  var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n    var from;\n    var to = toObject(target);\n    var symbols;\n\n    for (var s = 1; s < arguments.length; s++) {\n      from = Object(arguments[s]);\n\n      for (var key in from) {\n        if (hasOwnProperty.call(from, key)) {\n          to[key] = from[key];\n        }\n      }\n\n      if (getOwnPropertySymbols) {\n        symbols = getOwnPropertySymbols(from);\n\n        for (var i = 0; i < symbols.length; i++) {\n          if (propIsEnumerable.call(from, symbols[i])) {\n            to[symbols[i]] = from[symbols[i]];\n          }\n        }\n      }\n    }\n\n    return to;\n  };\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n  var ReactPropTypesSecret_1 = ReactPropTypesSecret;\n  {\n    var invariant$1 = invariant_1;\n    var warning$1 = warning_1;\n    var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;\n    var loggedTypeFailures = {};\n  }\n  /**\n   * Assert that the values match with the type specs.\n   * Error messages are memorized and will only be shown once.\n   *\n   * @param {object} typeSpecs Map of name to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @param {string} componentName Name of the component for error messages.\n   * @param {?Function} getStack Returns the component stack.\n   * @private\n   */\n\n  function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n    {\n      for (var typeSpecName in typeSpecs) {\n        if (typeSpecs.hasOwnProperty(typeSpecName)) {\n          var error; // Prop type validation may throw. In case they do, we don't want to\n          // fail the render phase where it didn't fail before. So we log it.\n          // After these have been cleaned up, we'll let them throw.\n\n          try {\n            // This is intentionally an invariant that gets caught. It's the same\n            // behavior as without this statement except with a better message.\n            invariant$1(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);\n          } catch (ex) {\n            error = ex;\n          }\n\n          warning$1(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n\n          if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n            // Only monitor this failure once because there tends to be a lot of the\n            // same error.\n            loggedTypeFailures[error.message] = true;\n            var stack = getStack ? getStack() : '';\n            warning$1(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n          }\n        }\n      }\n    }\n  }\n\n  var checkPropTypes_1 = checkPropTypes;\n\n  var factoryWithTypeCheckers = function factoryWithTypeCheckers(isValidElement, throwOnDirectAccess) {\n    /* global Symbol */\n    var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n    /**\n     * Returns the iterator method function contained on the iterable object.\n     *\n     * Be sure to invoke the function with the iterable as context:\n     *\n     *     var iteratorFn = getIteratorFn(myIterable);\n     *     if (iteratorFn) {\n     *       var iterator = iteratorFn.call(myIterable);\n     *       ...\n     *     }\n     *\n     * @param {?object} maybeIterable\n     * @return {?function}\n     */\n\n    function getIteratorFn(maybeIterable) {\n      var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n      if (typeof iteratorFn === 'function') {\n        return iteratorFn;\n      }\n    }\n    /**\n     * Collection of methods that allow declaration and validation of props that are\n     * supplied to React components. Example usage:\n     *\n     *   var Props = require('ReactPropTypes');\n     *   var MyArticle = React.createClass({\n     *     propTypes: {\n     *       // An optional string prop named \"description\".\n     *       description: Props.string,\n     *\n     *       // A required enum prop named \"category\".\n     *       category: Props.oneOf(['News','Photos']).isRequired,\n     *\n     *       // A prop named \"dialog\" that requires an instance of Dialog.\n     *       dialog: Props.instanceOf(Dialog).isRequired\n     *     },\n     *     render: function() { ... }\n     *   });\n     *\n     * A more formal specification of how these methods are used:\n     *\n     *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n     *   decl := ReactPropTypes.{type}(.isRequired)?\n     *\n     * Each and every declaration produces a function with the same signature. This\n     * allows the creation of custom validation functions. For example:\n     *\n     *  var MyLink = React.createClass({\n     *    propTypes: {\n     *      // An optional string or URI prop named \"href\".\n     *      href: function(props, propName, componentName) {\n     *        var propValue = props[propName];\n     *        if (propValue != null && typeof propValue !== 'string' &&\n     *            !(propValue instanceof URI)) {\n     *          return new Error(\n     *            'Expected a string or an URI for ' + propName + ' in ' +\n     *            componentName\n     *          );\n     *        }\n     *      }\n     *    },\n     *    render: function() {...}\n     *  });\n     *\n     * @internal\n     */\n\n\n    var ANONYMOUS = '<<anonymous>>'; // Important!\n    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n    var ReactPropTypes = {\n      array: createPrimitiveTypeChecker('array'),\n      bool: createPrimitiveTypeChecker('boolean'),\n      func: createPrimitiveTypeChecker('function'),\n      number: createPrimitiveTypeChecker('number'),\n      object: createPrimitiveTypeChecker('object'),\n      string: createPrimitiveTypeChecker('string'),\n      symbol: createPrimitiveTypeChecker('symbol'),\n      any: createAnyTypeChecker(),\n      arrayOf: createArrayOfTypeChecker,\n      element: createElementTypeChecker(),\n      instanceOf: createInstanceTypeChecker,\n      node: createNodeChecker(),\n      objectOf: createObjectOfTypeChecker,\n      oneOf: createEnumTypeChecker,\n      oneOfType: createUnionTypeChecker,\n      shape: createShapeTypeChecker,\n      exact: createStrictShapeTypeChecker\n    };\n    /**\n     * inlined Object.is polyfill to avoid requiring consumers ship their own\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n     */\n\n    /*eslint-disable no-self-compare*/\n\n    function is(x, y) {\n      // SameValue algorithm\n      if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return x !== 0 || 1 / x === 1 / y;\n      } else {\n        // Step 6.a: NaN == NaN\n        return x !== x && y !== y;\n      }\n    }\n    /*eslint-enable no-self-compare*/\n\n    /**\n     * We use an Error-like object for backward compatibility as people may call\n     * PropTypes directly and inspect their output. However, we don't use real\n     * Errors anymore. We don't inspect their stack anyway, and creating them\n     * is prohibitively expensive if they are created too often, such as what\n     * happens in oneOfType() for any type before the one that matched.\n     */\n\n\n    function PropTypeError(message) {\n      this.message = message;\n      this.stack = '';\n    } // Make `instanceof Error` still work for returned errors.\n\n\n    PropTypeError.prototype = Error.prototype;\n\n    function createChainableTypeChecker(validate) {\n      {\n        var manualPropTypeCallCache = {};\n        var manualPropTypeWarningCount = 0;\n      }\n\n      function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n        componentName = componentName || ANONYMOUS;\n        propFullName = propFullName || propName;\n\n        if (secret !== ReactPropTypesSecret_1) {\n          if (throwOnDirectAccess) {\n            // New behavior only for users of `prop-types` package\n            invariant_1(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n          } else if (\"development\" !== 'production' && typeof console !== 'undefined') {\n            // Old behavior for people using React.PropTypes\n            var cacheKey = componentName + ':' + propName;\n\n            if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3) {\n              warning_1(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);\n              manualPropTypeCallCache[cacheKey] = true;\n              manualPropTypeWarningCount++;\n            }\n          }\n        }\n\n        if (props[propName] == null) {\n          if (isRequired) {\n            if (props[propName] === null) {\n              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n            }\n\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n          }\n\n          return null;\n        } else {\n          return validate(props, propName, componentName, location, propFullName);\n        }\n      }\n\n      var chainedCheckType = checkType.bind(null, false);\n      chainedCheckType.isRequired = checkType.bind(null, true);\n      return chainedCheckType;\n    }\n\n    function createPrimitiveTypeChecker(expectedType) {\n      function validate(props, propName, componentName, location, propFullName, secret) {\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== expectedType) {\n          // `propValue` being instance of, say, date/regexp, pass the 'object'\n          // check, but we can offer a more precise error message here rather than\n          // 'of type `object`'.\n          var preciseType = getPreciseType(propValue);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createAnyTypeChecker() {\n      return createChainableTypeChecker(emptyFunction_1.thatReturnsNull);\n    }\n\n    function createArrayOfTypeChecker(typeChecker) {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (typeof typeChecker !== 'function') {\n          return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n        }\n\n        var propValue = props[propName];\n\n        if (!Array.isArray(propValue)) {\n          var propType = getPropType(propValue);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n        }\n\n        for (var i = 0; i < propValue.length; i++) {\n          var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);\n\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createElementTypeChecker() {\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n\n        if (!isValidElement(propValue)) {\n          var propType = getPropType(propValue);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createInstanceTypeChecker(expectedClass) {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (!(props[propName] instanceof expectedClass)) {\n          var expectedClassName = expectedClass.name || ANONYMOUS;\n          var actualClassName = getClassName(props[propName]);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createEnumTypeChecker(expectedValues) {\n      if (!Array.isArray(expectedValues)) {\n        warning_1(false, 'Invalid argument supplied to oneOf, expected an instance of array.');\n        return emptyFunction_1.thatReturnsNull;\n      }\n\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n\n        for (var i = 0; i < expectedValues.length; i++) {\n          if (is(propValue, expectedValues[i])) {\n            return null;\n          }\n        }\n\n        var valuesString = JSON.stringify(expectedValues);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createObjectOfTypeChecker(typeChecker) {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (typeof typeChecker !== 'function') {\n          return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n        }\n\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== 'object') {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n        }\n\n        for (var key in propValue) {\n          if (propValue.hasOwnProperty(key)) {\n            var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n            if (error instanceof Error) {\n              return error;\n            }\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createUnionTypeChecker(arrayOfTypeCheckers) {\n      if (!Array.isArray(arrayOfTypeCheckers)) {\n        warning_1(false, 'Invalid argument supplied to oneOfType, expected an instance of array.');\n        return emptyFunction_1.thatReturnsNull;\n      }\n\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n\n        if (typeof checker !== 'function') {\n          warning_1(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);\n          return emptyFunction_1.thatReturnsNull;\n        }\n      }\n\n      function validate(props, propName, componentName, location, propFullName) {\n        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n          var checker = arrayOfTypeCheckers[i];\n\n          if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {\n            return null;\n          }\n        }\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createNodeChecker() {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (!isNode(props[propName])) {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createShapeTypeChecker(shapeTypes) {\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== 'object') {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n        }\n\n        for (var key in shapeTypes) {\n          var checker = shapeTypes[key];\n\n          if (!checker) {\n            continue;\n          }\n\n          var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n          if (error) {\n            return error;\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createStrictShapeTypeChecker(shapeTypes) {\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== 'object') {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n        } // We need to check all keys in case some are required but missing from\n        // props.\n\n\n        var allKeys = objectAssign({}, props[propName], shapeTypes);\n\n        for (var key in allKeys) {\n          var checker = shapeTypes[key];\n\n          if (!checker) {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n          }\n\n          var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n          if (error) {\n            return error;\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function isNode(propValue) {\n      switch (typeof propValue) {\n        case 'number':\n        case 'string':\n        case 'undefined':\n          return true;\n\n        case 'boolean':\n          return !propValue;\n\n        case 'object':\n          if (Array.isArray(propValue)) {\n            return propValue.every(isNode);\n          }\n\n          if (propValue === null || isValidElement(propValue)) {\n            return true;\n          }\n\n          var iteratorFn = getIteratorFn(propValue);\n\n          if (iteratorFn) {\n            var iterator = iteratorFn.call(propValue);\n            var step;\n\n            if (iteratorFn !== propValue.entries) {\n              while (!(step = iterator.next()).done) {\n                if (!isNode(step.value)) {\n                  return false;\n                }\n              }\n            } else {\n              // Iterator will provide entry [k,v] tuples rather than values.\n              while (!(step = iterator.next()).done) {\n                var entry = step.value;\n\n                if (entry) {\n                  if (!isNode(entry[1])) {\n                    return false;\n                  }\n                }\n              }\n            }\n          } else {\n            return false;\n          }\n\n          return true;\n\n        default:\n          return false;\n      }\n    }\n\n    function isSymbol(propType, propValue) {\n      // Native Symbol.\n      if (propType === 'symbol') {\n        return true;\n      } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n      if (propValue['@@toStringTag'] === 'Symbol') {\n        return true;\n      } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n      if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n        return true;\n      }\n\n      return false;\n    } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n    function getPropType(propValue) {\n      var propType = typeof propValue;\n\n      if (Array.isArray(propValue)) {\n        return 'array';\n      }\n\n      if (propValue instanceof RegExp) {\n        // Old webkits (at least until Android 4.0) return 'function' rather than\n        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n        // passes PropTypes.object.\n        return 'object';\n      }\n\n      if (isSymbol(propType, propValue)) {\n        return 'symbol';\n      }\n\n      return propType;\n    } // This handles more types than `getPropType`. Only used for error messages.\n    // See `createPrimitiveTypeChecker`.\n\n\n    function getPreciseType(propValue) {\n      if (typeof propValue === 'undefined' || propValue === null) {\n        return '' + propValue;\n      }\n\n      var propType = getPropType(propValue);\n\n      if (propType === 'object') {\n        if (propValue instanceof Date) {\n          return 'date';\n        } else if (propValue instanceof RegExp) {\n          return 'regexp';\n        }\n      }\n\n      return propType;\n    } // Returns a string that is postfixed to a warning about an invalid type.\n    // For example, \"undefined\" or \"of type array\"\n\n\n    function getPostfixForTypeWarning(value) {\n      var type = getPreciseType(value);\n\n      switch (type) {\n        case 'array':\n        case 'object':\n          return 'an ' + type;\n\n        case 'boolean':\n        case 'date':\n        case 'regexp':\n          return 'a ' + type;\n\n        default:\n          return type;\n      }\n    } // Returns class name of the object, if any.\n\n\n    function getClassName(propValue) {\n      if (!propValue.constructor || !propValue.constructor.name) {\n        return ANONYMOUS;\n      }\n\n      return propValue.constructor.name;\n    }\n\n    ReactPropTypes.checkPropTypes = checkPropTypes_1;\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n\n  var propTypes = createCommonjsModule(function (module) {\n    /**\n     * Copyright (c) 2013-present, Facebook, Inc.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n    {\n      var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol[\"for\"] && Symbol[\"for\"]('react.element') || 0xeac7;\n\n      var isValidElement = function isValidElement(object) {\n        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n      }; // By explicitly using `prop-types` you are opting into new development behavior.\n      // http://fb.me/prop-types-in-prod\n\n\n      var throwOnDirectAccess = true;\n      module.exports = factoryWithTypeCheckers(isValidElement, throwOnDirectAccess);\n    }\n  });\n  var classnames = createCommonjsModule(function (module) {\n    /*!\n      Copyright (c) 2016 Jed Watson.\n      Licensed under the MIT License (MIT), see\n      http://jedwatson.github.io/classnames\n    */\n\n    /* global define */\n    (function () {\n      var hasOwn = {}.hasOwnProperty;\n\n      function classNames() {\n        var classes = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var arg = arguments[i];\n          if (!arg) continue;\n          var argType = typeof arg;\n\n          if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n          } else if (Array.isArray(arg)) {\n            classes.push(classNames.apply(null, arg));\n          } else if (argType === 'object') {\n            for (var key in arg) {\n              if (hasOwn.call(arg, key) && arg[key]) {\n                classes.push(key);\n              }\n            }\n          }\n        }\n\n        return classes.join(' ');\n      }\n\n      if ('object' !== 'undefined' && module.exports) {\n        module.exports = classNames;\n      } else if (typeof undefined === 'function' && typeof undefined.amd === 'object' && undefined.amd) {\n        // register as 'classnames', consistent with npm package name\n        undefined('classnames', [], function () {\n          return classNames;\n        });\n      } else {\n        window.classNames = classNames;\n      }\n    })();\n  }); // @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\n\n  function findInArray(array\n  /*: Array<any> | TouchList*/\n  , callback\n  /*: Function*/\n  )\n  /*: any*/\n  {\n    for (var i = 0, length = array.length; i < length; i++) {\n      if (callback.apply(callback, [array[i], i, array])) return array[i];\n    }\n  }\n\n  function isFunction(func\n  /*: any*/\n  )\n  /*: boolean*/\n  {\n    return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n  }\n\n  function isNum(num\n  /*: any*/\n  )\n  /*: boolean*/\n  {\n    return typeof num === 'number' && !isNaN(num);\n  }\n\n  function _int(a\n  /*: string*/\n  )\n  /*: number*/\n  {\n    return parseInt(a, 10);\n  }\n\n  function dontSetMe(props\n  /*: Object*/\n  , propName\n  /*: string*/\n  , componentName\n  /*: string*/\n  ) {\n    if (props[propName]) {\n      return new Error('Invalid prop ' + propName + ' passed to ' + componentName + ' - do not set this, set it on the child.');\n    }\n  }\n\n  var prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\n  function getPrefix()\n  /*: string*/\n  {\n    var prop\n    /*: string*/\n    = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform'; // Checking specifically for 'window.document' is for pseudo-browser server-side\n    // environments that define 'window' as the global context.\n    // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n\n    if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n    var style = window.document.documentElement.style;\n    if (prop in style) return '';\n\n    for (var i = 0; i < prefixes.length; i++) {\n      if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n    }\n\n    return '';\n  }\n\n  function browserPrefixToKey(prop\n  /*: string*/\n  , prefix\n  /*: string*/\n  )\n  /*: string*/\n  {\n    return prefix ? '' + prefix + kebabToTitleCase(prop) : prop;\n  }\n\n  function kebabToTitleCase(str\n  /*: string*/\n  )\n  /*: string*/\n  {\n    var out = '';\n    var shouldCapitalize = true;\n\n    for (var i = 0; i < str.length; i++) {\n      if (shouldCapitalize) {\n        out += str[i].toUpperCase();\n        shouldCapitalize = false;\n      } else if (str[i] === '-') {\n        shouldCapitalize = true;\n      } else {\n        out += str[i];\n      }\n    }\n\n    return out;\n  } // Default export is the prefix itself, like 'Moz', 'Webkit', etc\n  // Note that you may have to re-test for certain things; for instance, Chrome 50\n  // can handle unprefixed `transform`, but not unprefixed `user-select`\n\n\n  var browserPrefix = getPrefix();\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var defineProperty = function defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var inherits = function inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  var slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n  /*:: import type {ControlPosition, PositionOffsetControlPosition, MouseTouchEvent} from './types';*/\n\n\n  var matchesSelectorFunc = '';\n\n  function matchesSelector(el\n  /*: Node*/\n  , selector\n  /*: string*/\n  )\n  /*: boolean*/\n  {\n    if (!matchesSelectorFunc) {\n      matchesSelectorFunc = findInArray(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {\n        // $FlowIgnore: Doesn't think elements are indexable\n        return isFunction(el[method]);\n      });\n    } // Might not be found entirely (not an Element?) - in that case, bail\n    // $FlowIgnore: Doesn't think elements are indexable\n\n\n    if (!isFunction(el[matchesSelectorFunc])) return false; // $FlowIgnore: Doesn't think elements are indexable\n\n    return el[matchesSelectorFunc](selector);\n  } // Works up the tree to the draggable itself attempting to match selector.\n\n\n  function matchesSelectorAndParentsTo(el\n  /*: Node*/\n  , selector\n  /*: string*/\n  , baseNode\n  /*: Node*/\n  )\n  /*: boolean*/\n  {\n    var node = el;\n\n    do {\n      if (matchesSelector(node, selector)) return true;\n      if (node === baseNode) return false;\n      node = node.parentNode;\n    } while (node);\n\n    return false;\n  }\n\n  function addEvent(el\n  /*: ?Node*/\n  , event\n  /*: string*/\n  , handler\n  /*: Function*/\n  )\n  /*: void*/\n  {\n    if (!el) {\n      return;\n    }\n\n    if (el.attachEvent) {\n      el.attachEvent('on' + event, handler);\n    } else if (el.addEventListener) {\n      el.addEventListener(event, handler, true);\n    } else {\n      // $FlowIgnore: Doesn't think elements are indexable\n      el['on' + event] = handler;\n    }\n  }\n\n  function removeEvent(el\n  /*: ?Node*/\n  , event\n  /*: string*/\n  , handler\n  /*: Function*/\n  )\n  /*: void*/\n  {\n    if (!el) {\n      return;\n    }\n\n    if (el.detachEvent) {\n      el.detachEvent('on' + event, handler);\n    } else if (el.removeEventListener) {\n      el.removeEventListener(event, handler, true);\n    } else {\n      // $FlowIgnore: Doesn't think elements are indexable\n      el['on' + event] = null;\n    }\n  }\n\n  function outerHeight(node\n  /*: HTMLElement*/\n  )\n  /*: number*/\n  {\n    // This is deliberately excluding margin for our calculations, since we are using\n    // offsetTop which is including margin. See getBoundPosition\n    var height = node.clientHeight;\n    var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n    height += _int(computedStyle.borderTopWidth);\n    height += _int(computedStyle.borderBottomWidth);\n    return height;\n  }\n\n  function outerWidth(node\n  /*: HTMLElement*/\n  )\n  /*: number*/\n  {\n    // This is deliberately excluding margin for our calculations, since we are using\n    // offsetLeft which is including margin. See getBoundPosition\n    var width = node.clientWidth;\n    var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n    width += _int(computedStyle.borderLeftWidth);\n    width += _int(computedStyle.borderRightWidth);\n    return width;\n  }\n\n  function innerHeight(node\n  /*: HTMLElement*/\n  )\n  /*: number*/\n  {\n    var height = node.clientHeight;\n    var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n    height -= _int(computedStyle.paddingTop);\n    height -= _int(computedStyle.paddingBottom);\n    return height;\n  }\n\n  function innerWidth(node\n  /*: HTMLElement*/\n  )\n  /*: number*/\n  {\n    var width = node.clientWidth;\n    var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n    width -= _int(computedStyle.paddingLeft);\n    width -= _int(computedStyle.paddingRight);\n    return width;\n  } // Get from offsetParent\n\n\n  function offsetXYFromParent(evt\n  /*: {clientX: number, clientY: number}*/\n  , offsetParent\n  /*: HTMLElement*/\n  )\n  /*: ControlPosition*/\n  {\n    var isBody = offsetParent === offsetParent.ownerDocument.body;\n    var offsetParentRect = isBody ? {\n      left: 0,\n      top: 0\n    } : offsetParent.getBoundingClientRect();\n    var x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left;\n    var y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top;\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function createCSSTransform(controlPos\n  /*: ControlPosition*/\n  , positionOffset\n  /*: PositionOffsetControlPosition*/\n  )\n  /*: Object*/\n  {\n    var translation = getTranslation(controlPos, positionOffset, 'px');\n    return defineProperty({}, browserPrefixToKey('transform', browserPrefix), translation);\n  }\n\n  function createSVGTransform(controlPos\n  /*: ControlPosition*/\n  , positionOffset\n  /*: PositionOffsetControlPosition*/\n  )\n  /*: string*/\n  {\n    var translation = getTranslation(controlPos, positionOffset, '');\n    return translation;\n  }\n\n  function getTranslation(_ref2, positionOffset\n  /*: PositionOffsetControlPosition*/\n  , unitSuffix\n  /*: string*/\n  )\n  /*: string*/\n  {\n    var x = _ref2.x,\n        y = _ref2.y;\n    var translation = 'translate(' + x + unitSuffix + ',' + y + unitSuffix + ')';\n\n    if (positionOffset) {\n      var defaultX = '' + (typeof positionOffset.x === 'string' ? positionOffset.x : positionOffset.x + unitSuffix);\n      var defaultY = '' + (typeof positionOffset.y === 'string' ? positionOffset.y : positionOffset.y + unitSuffix);\n      translation = 'translate(' + defaultX + ', ' + defaultY + ')' + translation;\n    }\n\n    return translation;\n  }\n\n  function getTouch(e\n  /*: MouseTouchEvent*/\n  , identifier\n  /*: number*/\n  )\n  /*: ?{clientX: number, clientY: number}*/\n  {\n    return e.targetTouches && findInArray(e.targetTouches, function (t) {\n      return identifier === t.identifier;\n    }) || e.changedTouches && findInArray(e.changedTouches, function (t) {\n      return identifier === t.identifier;\n    });\n  }\n\n  function getTouchIdentifier(e\n  /*: MouseTouchEvent*/\n  )\n  /*: ?number*/\n  {\n    if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n    if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n  } // User-select Hacks:\n  //\n  // Useful for preventing blue highlights all over everything when dragging.\n  // Note we're passing `document` b/c we could be iframed\n\n\n  function addUserSelectStyles(doc\n  /*: ?Document*/\n  ) {\n    if (!doc) return;\n    var styleEl = doc.getElementById('react-draggable-style-el');\n\n    if (!styleEl) {\n      styleEl = doc.createElement('style');\n      styleEl.type = 'text/css';\n      styleEl.id = 'react-draggable-style-el';\n      styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {background: transparent;}\\n';\n      styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {background: transparent;}\\n';\n      doc.getElementsByTagName('head')[0].appendChild(styleEl);\n    }\n\n    if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n  }\n\n  function removeUserSelectStyles(doc\n  /*: ?Document*/\n  ) {\n    try {\n      if (doc && doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection'); // $FlowIgnore: IE\n\n      if (doc.selection) {\n        // $FlowIgnore: IE\n        doc.selection.empty();\n      } else {\n        window.getSelection().removeAllRanges(); // remove selection caused by scroll\n      }\n    } catch (e) {// probably IE\n    }\n  }\n\n  function styleHacks()\n  /*: Object*/\n  {\n    var childStyle\n    /*: Object*/\n    = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Workaround IE pointer events; see #51\n    // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n\n    return _extends({\n      touchAction: 'none'\n    }, childStyle);\n  }\n\n  function addClassName(el\n  /*: HTMLElement*/\n  , className\n  /*: string*/\n  ) {\n    if (el.classList) {\n      el.classList.add(className);\n    } else {\n      if (!el.className.match(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)'))) {\n        el.className += ' ' + className;\n      }\n    }\n  }\n\n  function removeClassName(el\n  /*: HTMLElement*/\n  , className\n  /*: string*/\n  ) {\n    if (el.classList) {\n      el.classList.remove(className);\n    } else {\n      el.className = el.className.replace(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)', 'g'), '');\n    }\n  }\n  /*:: import type Draggable from '../Draggable';*/\n\n  /*:: import type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';*/\n\n  /*:: import type DraggableCore from '../DraggableCore';*/\n\n\n  function getBoundPosition(draggable\n  /*: Draggable*/\n  , x\n  /*: number*/\n  , y\n  /*: number*/\n  )\n  /*: [number, number]*/\n  {\n    // If no bounds, short-circuit and move on\n    if (!draggable.props.bounds) return [x, y]; // Clone new bounds\n\n    var bounds = draggable.props.bounds;\n    bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n    var node = findDOMNode(draggable);\n\n    if (typeof bounds === 'string') {\n      var ownerDocument = node.ownerDocument;\n      var ownerWindow = ownerDocument.defaultView;\n      var boundNode = void 0;\n\n      if (bounds === 'parent') {\n        boundNode = node.parentNode;\n      } else {\n        boundNode = ownerDocument.querySelector(bounds);\n      }\n\n      if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n        throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n      }\n\n      var nodeStyle = ownerWindow.getComputedStyle(node);\n      var boundNodeStyle = ownerWindow.getComputedStyle(boundNode); // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\n      bounds = {\n        left: -node.offsetLeft + _int(boundNodeStyle.paddingLeft) + _int(nodeStyle.marginLeft),\n        top: -node.offsetTop + _int(boundNodeStyle.paddingTop) + _int(nodeStyle.marginTop),\n        right: innerWidth(boundNode) - outerWidth(node) - node.offsetLeft + _int(boundNodeStyle.paddingRight) - _int(nodeStyle.marginRight),\n        bottom: innerHeight(boundNode) - outerHeight(node) - node.offsetTop + _int(boundNodeStyle.paddingBottom) - _int(nodeStyle.marginBottom)\n      };\n    } // Keep x and y below right and bottom limits...\n\n\n    if (isNum(bounds.right)) x = Math.min(x, bounds.right);\n    if (isNum(bounds.bottom)) y = Math.min(y, bounds.bottom); // But above left and top limits.\n\n    if (isNum(bounds.left)) x = Math.max(x, bounds.left);\n    if (isNum(bounds.top)) y = Math.max(y, bounds.top);\n    return [x, y];\n  }\n\n  function snapToGrid(grid\n  /*: [number, number]*/\n  , pendingX\n  /*: number*/\n  , pendingY\n  /*: number*/\n  )\n  /*: [number, number]*/\n  {\n    var x = Math.round(pendingX / grid[0]) * grid[0];\n    var y = Math.round(pendingY / grid[1]) * grid[1];\n    return [x, y];\n  }\n\n  function canDragX(draggable\n  /*: Draggable*/\n  )\n  /*: boolean*/\n  {\n    return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n  }\n\n  function canDragY(draggable\n  /*: Draggable*/\n  )\n  /*: boolean*/\n  {\n    return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n  } // Get {x, y} positions from event.\n\n\n  function getControlPosition(e\n  /*: MouseTouchEvent*/\n  , touchIdentifier\n  /*: ?number*/\n  , draggableCore\n  /*: DraggableCore*/\n  )\n  /*: ?ControlPosition*/\n  {\n    var touchObj = typeof touchIdentifier === 'number' ? getTouch(e, touchIdentifier) : null;\n    if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n\n    var node = findDOMNode(draggableCore); // User can provide an offsetParent if desired.\n\n    var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n    return offsetXYFromParent(touchObj || e, offsetParent);\n  } // Create an data object exposed by <DraggableCore>'s events\n\n\n  function createCoreData(draggable\n  /*: DraggableCore*/\n  , x\n  /*: number*/\n  , y\n  /*: number*/\n  )\n  /*: DraggableData*/\n  {\n    var state = draggable.state;\n    var isStart = !isNum(state.lastX);\n    var node = findDOMNode(draggable);\n\n    if (isStart) {\n      // If this is our first move, use the x and y as last coords.\n      return {\n        node: node,\n        deltaX: 0,\n        deltaY: 0,\n        lastX: x,\n        lastY: y,\n        x: x,\n        y: y\n      };\n    } else {\n      // Otherwise calculate proper values.\n      return {\n        node: node,\n        deltaX: x - state.lastX,\n        deltaY: y - state.lastY,\n        lastX: state.lastX,\n        lastY: state.lastY,\n        x: x,\n        y: y\n      };\n    }\n  } // Create an data exposed by <Draggable>'s events\n\n\n  function createDraggableData(draggable\n  /*: Draggable*/\n  , coreData\n  /*: DraggableData*/\n  )\n  /*: DraggableData*/\n  {\n    var scale = draggable.props.scale;\n    return {\n      node: coreData.node,\n      x: draggable.state.x + coreData.deltaX / scale,\n      y: draggable.state.y + coreData.deltaY / scale,\n      deltaX: coreData.deltaX / scale,\n      deltaY: coreData.deltaY / scale,\n      lastX: draggable.state.x,\n      lastY: draggable.state.y\n    };\n  } // A lot faster than stringify/parse\n\n\n  function cloneBounds(bounds\n  /*: Bounds*/\n  )\n  /*: Bounds*/\n  {\n    return {\n      left: bounds.left,\n      top: bounds.top,\n      right: bounds.right,\n      bottom: bounds.bottom\n    };\n  }\n\n  function findDOMNode(draggable\n  /*: Draggable | DraggableCore*/\n  )\n  /*: HTMLElement*/\n  {\n    var node = ReactDOM.findDOMNode(draggable);\n\n    if (!node) {\n      throw new Error('<DraggableCore>: Unmounted during event!');\n    } // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n\n\n    return node;\n  }\n  /*eslint no-console:0*/\n\n\n  function log() {}\n  /*:: import type {EventHandler, MouseTouchEvent} from './utils/types';*/\n  // Simple abstraction for dragging events names.\n\n  /*:: import type {Element as ReactElement} from 'react';*/\n\n\n  var eventsFor = {\n    touch: {\n      start: 'touchstart',\n      move: 'touchmove',\n      stop: 'touchend'\n    },\n    mouse: {\n      start: 'mousedown',\n      move: 'mousemove',\n      stop: 'mouseup'\n    }\n  }; // Default to mouse events.\n\n  var dragEventFor = eventsFor.mouse;\n  /*:: type DraggableCoreState = {\n    dragging: boolean,\n    lastX: number,\n    lastY: number,\n    touchIdentifier: ?number\n  };*/\n\n  /*:: export type DraggableBounds = {\n    left: number,\n    right: number,\n    top: number,\n    bottom: number,\n  };*/\n\n  /*:: export type DraggableData = {\n    node: HTMLElement,\n    x: number, y: number,\n    deltaX: number, deltaY: number,\n    lastX: number, lastY: number,\n  };*/\n\n  /*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;*/\n\n  /*:: export type ControlPosition = {x: number, y: number};*/\n\n  /*:: export type PositionOffsetControlPosition = {x: number|string, y: number|string};*/\n  //\n  // Define <DraggableCore>.\n  //\n  // <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n  // work well with libraries that require more control over the element.\n  //\n\n  /*:: export type DraggableCoreProps = {\n    allowAnyClick: boolean,\n    cancel: string,\n    children: ReactElement<any>,\n    disabled: boolean,\n    enableUserSelectHack: boolean,\n    offsetParent: HTMLElement,\n    grid: [number, number],\n    handle: string,\n    onStart: DraggableEventHandler,\n    onDrag: DraggableEventHandler,\n    onStop: DraggableEventHandler,\n    onMouseDown: (e: MouseEvent) => void,\n  };*/\n\n  var DraggableCore = function (_React$Component) {\n    inherits(DraggableCore, _React$Component);\n\n    function DraggableCore() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      classCallCheck(this, DraggableCore);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = DraggableCore.__proto__ || Object.getPrototypeOf(DraggableCore)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        dragging: false,\n        // Used while dragging to determine deltas.\n        lastX: NaN,\n        lastY: NaN,\n        touchIdentifier: null\n      }, _this.handleDragStart = function (e) {\n        // Make it possible to attach event handlers on top of this one.\n        _this.props.onMouseDown(e); // Only accept left-clicks.\n\n\n        if (!_this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false; // Get nodes. Be sure to grab relative document (could be iframed)\n\n        var thisNode = ReactDOM.findDOMNode(_this);\n\n        if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n          throw new Error('<DraggableCore> not mounted on DragStart!');\n        }\n\n        var ownerDocument = thisNode.ownerDocument; // Short circuit if handle or cancel prop was provided and selector doesn't match.\n\n        if (_this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || _this.props.handle && !matchesSelectorAndParentsTo(e.target, _this.props.handle, thisNode) || _this.props.cancel && matchesSelectorAndParentsTo(e.target, _this.props.cancel, thisNode)) {\n          return;\n        } // Set touch identifier in component state if this is a touch event. This allows us to\n        // distinguish between individual touches on multitouch screens by identifying which\n        // touchpoint was set to this element.\n\n\n        var touchIdentifier = getTouchIdentifier(e);\n\n        _this.setState({\n          touchIdentifier: touchIdentifier\n        }); // Get the current drag point from the event. This is used as the offset.\n\n\n        var position = getControlPosition(e, touchIdentifier, _this);\n        if (position == null) return; // not possible but satisfies flow\n\n        var x = position.x,\n            y = position.y; // Create an event object with all the data parents need to make a decision here.\n\n        var coreEvent = createCoreData(_this, x, y); // Call event handler. If it returns explicit false, cancel.\n\n        log('calling', _this.props.onStart);\n\n        var shouldUpdate = _this.props.onStart(e, coreEvent);\n\n        if (shouldUpdate === false) return; // Add a style to the body to disable user-select. This prevents text from\n        // being selected all over the page.\n\n        if (_this.props.enableUserSelectHack) addUserSelectStyles(ownerDocument); // Initiate dragging. Set the current x and y as offsets\n        // so we know how much we've moved during the drag. This allows us\n        // to drag elements around even if they have been moved, without issue.\n\n        _this.setState({\n          dragging: true,\n          lastX: x,\n          lastY: y\n        }); // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n        // this element. We use different events depending on whether or not we have detected that this\n        // is a touch-capable device.\n\n\n        addEvent(ownerDocument, dragEventFor.move, _this.handleDrag);\n        addEvent(ownerDocument, dragEventFor.stop, _this.handleDragStop);\n      }, _this.handleDrag = function (e) {\n        // Prevent scrolling on mobile devices, like ipad/iphone.\n        if (e.type === 'touchmove') e.preventDefault(); // Get the current drag point from the event. This is used as the offset.\n\n        var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n        if (position == null) return;\n        var x = position.x,\n            y = position.y; // Snap to grid if prop has been provided\n\n        if (Array.isArray(_this.props.grid)) {\n          var _deltaX = x - _this.state.lastX,\n              _deltaY = y - _this.state.lastY;\n\n          var _snapToGrid = snapToGrid(_this.props.grid, _deltaX, _deltaY);\n\n          var _snapToGrid2 = slicedToArray(_snapToGrid, 2);\n\n          _deltaX = _snapToGrid2[0];\n          _deltaY = _snapToGrid2[1];\n          if (!_deltaX && !_deltaY) return; // skip useless drag\n\n          x = _this.state.lastX + _deltaX, y = _this.state.lastY + _deltaY;\n        }\n\n        var coreEvent = createCoreData(_this, x, y); // Call event handler. If it returns explicit false, trigger end.\n\n        var shouldUpdate = _this.props.onDrag(e, coreEvent);\n\n        if (shouldUpdate === false) {\n          try {\n            // $FlowIgnore\n            _this.handleDragStop(new MouseEvent('mouseup'));\n          } catch (err) {\n            // Old browsers\n            var event = document.createEvent('MouseEvents')\n            /*: any*/\n            ; // I see why this insanity was deprecated\n            // $FlowIgnore\n\n            event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\n            _this.handleDragStop(event);\n          }\n\n          return;\n        }\n\n        _this.setState({\n          lastX: x,\n          lastY: y\n        });\n      }, _this.handleDragStop = function (e) {\n        if (!_this.state.dragging) return;\n        var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n        if (position == null) return;\n        var x = position.x,\n            y = position.y;\n        var coreEvent = createCoreData(_this, x, y);\n        var thisNode = ReactDOM.findDOMNode(_this);\n\n        if (thisNode) {\n          // Remove user-select hack\n          if (_this.props.enableUserSelectHack) removeUserSelectStyles(thisNode.ownerDocument);\n        } // Reset the el.\n\n\n        _this.setState({\n          dragging: false,\n          lastX: NaN,\n          lastY: NaN\n        }); // Call event handler\n\n\n        _this.props.onStop(e, coreEvent);\n\n        if (thisNode) {\n          removeEvent(thisNode.ownerDocument, dragEventFor.move, _this.handleDrag);\n          removeEvent(thisNode.ownerDocument, dragEventFor.stop, _this.handleDragStop);\n        }\n      }, _this.onMouseDown = function (e) {\n        dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n        return _this.handleDragStart(e);\n      }, _this.onMouseUp = function (e) {\n        dragEventFor = eventsFor.mouse;\n        return _this.handleDragStop(e);\n      }, _this.onTouchStart = function (e) {\n        // We're on a touch device now, so change the event handlers\n        dragEventFor = eventsFor.touch;\n        return _this.handleDragStart(e);\n      }, _this.onTouchEnd = function (e) {\n        // We're on a touch device now, so change the event handlers\n        dragEventFor = eventsFor.touch;\n        return _this.handleDragStop(e);\n      }, _temp), possibleConstructorReturn(_this, _ret);\n    }\n\n    createClass(DraggableCore, [{\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n        // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n        var thisNode = ReactDOM.findDOMNode(this);\n\n        if (thisNode) {\n          var ownerDocument = thisNode.ownerDocument;\n          removeEvent(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n          removeEvent(ownerDocument, eventsFor.touch.move, this.handleDrag);\n          removeEvent(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n          removeEvent(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n          if (this.props.enableUserSelectHack) removeUserSelectStyles(ownerDocument);\n        }\n      } // Same as onMouseDown (start drag), but now consider this a touch device.\n\n    }, {\n      key: 'render',\n      value: function render() {\n        // Reuse the child provided\n        // This makes it flexible to use whatever element is wanted (div, ul, etc)\n        return React.cloneElement(React.Children.only(this.props.children), {\n          style: styleHacks(this.props.children.props.style),\n          // Note: mouseMove handler is attached to document so it will still function\n          // when the user drags quickly and leaves the bounds of the element.\n          onMouseDown: this.onMouseDown,\n          onTouchStart: this.onTouchStart,\n          onMouseUp: this.onMouseUp,\n          onTouchEnd: this.onTouchEnd\n        });\n      }\n    }]);\n    return DraggableCore;\n  }(React.Component);\n\n  DraggableCore.displayName = 'DraggableCore';\n  DraggableCore.propTypes = {\n    /**\n     * `allowAnyClick` allows dragging using any mouse button.\n     * By default, we only accept the left button.\n     *\n     * Defaults to `false`.\n     */\n    allowAnyClick: propTypes.bool,\n\n    /**\n     * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n     * with the exception of `onMouseDown`, will not fire.\n     */\n    disabled: propTypes.bool,\n\n    /**\n     * By default, we add 'user-select:none' attributes to the document body\n     * to prevent ugly text selection during drag. If this is causing problems\n     * for your app, set this to `false`.\n     */\n    enableUserSelectHack: propTypes.bool,\n\n    /**\n     * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n     * instead of using the parent node.\n     */\n    offsetParent: function offsetParent(props\n    /*: DraggableCoreProps*/\n    , propName\n    /*: $Keys<DraggableCoreProps>*/\n    ) {\n      if (props[propName] && props[propName].nodeType !== 1) {\n        throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n      }\n    },\n\n    /**\n     * `grid` specifies the x and y that dragging should snap to.\n     */\n    grid: propTypes.arrayOf(propTypes.number),\n\n    /**\n     * `scale` specifies the scale of the area you are dragging inside of. It allows\n     * the drag deltas to scale correctly with how far zoomed in/out you are.\n     */\n    scale: propTypes.number,\n\n    /**\n     * `handle` specifies a selector to be used as the handle that initiates drag.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable handle=\".handle\">\n     *              <div>\n     *                  <div className=\"handle\">Click me to drag</div>\n     *                  <div>This is some other content</div>\n     *              </div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    handle: propTypes.string,\n\n    /**\n     * `cancel` specifies a selector to be used to prevent drag initialization.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return(\n     *               <Draggable cancel=\".cancel\">\n     *                   <div>\n     *                     <div className=\"cancel\">You can't drag from here</div>\n     *                     <div>Dragging here works fine</div>\n     *                   </div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    cancel: propTypes.string,\n\n    /**\n     * Called when dragging starts.\n     * If this function returns the boolean false, dragging will be canceled.\n     */\n    onStart: propTypes.func,\n\n    /**\n     * Called while dragging.\n     * If this function returns the boolean false, dragging will be canceled.\n     */\n    onDrag: propTypes.func,\n\n    /**\n     * Called when dragging stops.\n     * If this function returns the boolean false, the drag will remain active.\n     */\n    onStop: propTypes.func,\n\n    /**\n     * A workaround option which can be passed if onMouseDown needs to be accessed,\n     * since it'll always be blocked (as there is internal use of onMouseDown)\n     */\n    onMouseDown: propTypes.func,\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n  DraggableCore.defaultProps = {\n    allowAnyClick: false,\n    // by default only accept left click\n    cancel: null,\n    disabled: false,\n    enableUserSelectHack: true,\n    offsetParent: null,\n    handle: null,\n    grid: null,\n    transform: null,\n    onStart: function onStart() {},\n    onDrag: function onDrag() {},\n    onStop: function onStop() {},\n    onMouseDown: function onMouseDown() {}\n  };\n  /*:: import type {DraggableEventHandler} from './utils/types';*/\n\n  /*:: import type {Element as ReactElement} from 'react';*/\n\n  /*:: type DraggableState = {\n    dragging: boolean,\n    dragged: boolean,\n    x: number, y: number,\n    slackX: number, slackY: number,\n    isElementSVG: boolean\n  };*/\n  //\n  // Define <Draggable>\n  //\n\n  /*:: export type DraggableProps = {\n    ...$Exact<DraggableCoreProps>,\n    axis: 'both' | 'x' | 'y' | 'none',\n    bounds: DraggableBounds | string | false,\n    defaultClassName: string,\n    defaultClassNameDragging: string,\n    defaultClassNameDragged: string,\n    defaultPosition: ControlPosition,\n    positionOffset: PositionOffsetControlPosition,\n    position: ControlPosition,\n    scale: number\n  };*/\n\n  var Draggable = function (_React$Component) {\n    inherits(Draggable, _React$Component);\n\n    function Draggable(props\n    /*: DraggableProps*/\n    ) {\n      classCallCheck(this, Draggable);\n\n      var _this = possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this, props));\n\n      _this.onDragStart = function (e, coreData) {\n        // Short-circuit if user's callback killed it.\n        var shouldStart = _this.props.onStart(e, createDraggableData(_this, coreData)); // Kills start event on core as well, so move handlers are never bound.\n\n\n        if (shouldStart === false) return false;\n\n        _this.setState({\n          dragging: true,\n          dragged: true\n        });\n      };\n\n      _this.onDrag = function (e, coreData) {\n        if (!_this.state.dragging) return false;\n        var uiData = createDraggableData(_this, coreData);\n        var newState\n        /*: $Shape<DraggableState>*/\n        = {\n          x: uiData.x,\n          y: uiData.y\n        }; // Keep within bounds.\n\n        if (_this.props.bounds) {\n          // Save original x and y.\n          var _x = newState.x,\n              _y = newState.y; // Add slack to the values used to calculate bound position. This will ensure that if\n          // we start removing slack, the element won't react to it right away until it's been\n          // completely removed.\n\n          newState.x += _this.state.slackX;\n          newState.y += _this.state.slackY; // Get bound position. This will ceil/floor the x and y within the boundaries.\n\n          var _getBoundPosition = getBoundPosition(_this, newState.x, newState.y),\n              _getBoundPosition2 = slicedToArray(_getBoundPosition, 2),\n              newStateX = _getBoundPosition2[0],\n              newStateY = _getBoundPosition2[1];\n\n          newState.x = newStateX;\n          newState.y = newStateY; // Recalculate slack by noting how much was shaved by the boundPosition handler.\n\n          newState.slackX = _this.state.slackX + (_x - newState.x);\n          newState.slackY = _this.state.slackY + (_y - newState.y); // Update the event we fire to reflect what really happened after bounds took effect.\n\n          uiData.x = newState.x;\n          uiData.y = newState.y;\n          uiData.deltaX = newState.x - _this.state.x;\n          uiData.deltaY = newState.y - _this.state.y;\n        } // Short-circuit if user's callback killed it.\n\n\n        var shouldUpdate = _this.props.onDrag(e, uiData);\n\n        if (shouldUpdate === false) return false;\n\n        _this.setState(newState);\n      };\n\n      _this.onDragStop = function (e, coreData) {\n        if (!_this.state.dragging) return false; // Short-circuit if user's callback killed it.\n\n        var shouldStop = _this.props.onStop(e, createDraggableData(_this, coreData));\n\n        if (shouldStop === false) return false;\n        var newState\n        /*: $Shape<DraggableState>*/\n        = {\n          dragging: false,\n          slackX: 0,\n          slackY: 0\n        }; // If this is a controlled component, the result of this operation will be to\n        // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n\n        var controlled = Boolean(_this.props.position);\n\n        if (controlled) {\n          var _this$props$position = _this.props.position,\n              _x2 = _this$props$position.x,\n              _y2 = _this$props$position.y;\n          newState.x = _x2;\n          newState.y = _y2;\n        }\n\n        _this.setState(newState);\n      };\n\n      _this.state = {\n        // Whether or not we are currently dragging.\n        dragging: false,\n        // Whether or not we have been dragged before.\n        dragged: false,\n        // Current transform x and y.\n        x: props.position ? props.position.x : props.defaultPosition.x,\n        y: props.position ? props.position.y : props.defaultPosition.y,\n        // Used for compensating for out-of-bounds drags\n        slackX: 0,\n        slackY: 0,\n        // Can only determine if SVG after mounting\n        isElementSVG: false\n      };\n      return _this;\n    }\n\n    createClass(Draggable, [{\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (this.props.position && !(this.props.onDrag || this.props.onStop)) {\n          // eslint-disable-next-line\n          console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Check to see if the element passed is an instanceof SVGElement\n        if (typeof window.SVGElement !== 'undefined' && ReactDOM.findDOMNode(this) instanceof window.SVGElement) {\n          this.setState({\n            isElementSVG: true\n          });\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps\n      /*: Object*/\n      ) {\n        // Set x/y if position has changed\n        if (nextProps.position && (!this.props.position || nextProps.position.x !== this.props.position.x || nextProps.position.y !== this.props.position.y)) {\n          this.setState({\n            x: nextProps.position.x,\n            y: nextProps.position.y\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        this.setState({\n          dragging: false\n        }); // prevents invariant if unmounted while dragging\n      }\n    }, {\n      key: 'render',\n      value: function render()\n      /*: ReactElement<any>*/\n      {\n        var _classNames;\n\n        var style = {},\n            svgTransform = null; // If this is controlled, we don't want to move it - unless it's dragging.\n\n        var controlled = Boolean(this.props.position);\n        var draggable = !controlled || this.state.dragging;\n        var position = this.props.position || this.props.defaultPosition;\n        var transformOpts = {\n          // Set left if horizontal drag is enabled\n          x: canDragX(this) && draggable ? this.state.x : position.x,\n          // Set top if vertical drag is enabled\n          y: canDragY(this) && draggable ? this.state.y : position.y\n        }; // If this element was SVG, we use the `transform` attribute.\n\n        if (this.state.isElementSVG) {\n          svgTransform = createSVGTransform(transformOpts, this.props.positionOffset);\n        } else {\n          // Add a CSS transform to move the element around. This allows us to move the element around\n          // without worrying about whether or not it is relatively or absolutely positioned.\n          // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n          // has a clean slate.\n          style = createCSSTransform(transformOpts, this.props.positionOffset);\n        }\n\n        var _props = this.props,\n            defaultClassName = _props.defaultClassName,\n            defaultClassNameDragging = _props.defaultClassNameDragging,\n            defaultClassNameDragged = _props.defaultClassNameDragged;\n        var children = React.Children.only(this.props.children); // Mark with class while dragging\n\n        var className = classnames(children.props.className || '', defaultClassName, (_classNames = {}, defineProperty(_classNames, defaultClassNameDragging, this.state.dragging), defineProperty(_classNames, defaultClassNameDragged, this.state.dragged), _classNames)); // Reuse the child provided\n        // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\n        return React.createElement(DraggableCore, _extends({}, this.props, {\n          onStart: this.onDragStart,\n          onDrag: this.onDrag,\n          onStop: this.onDragStop\n        }), React.cloneElement(children, {\n          className: className,\n          style: _extends({}, children.props.style, style),\n          transform: svgTransform\n        }));\n      }\n    }]);\n    return Draggable;\n  }(React.Component);\n\n  Draggable.displayName = 'Draggable';\n  Draggable.propTypes = _extends({}, DraggableCore.propTypes, {\n    /**\n     * `axis` determines which axis the draggable can move.\n     *\n     *  Note that all callbacks will still return data as normal. This only\n     *  controls flushing to the DOM.\n     *\n     * 'both' allows movement horizontally and vertically.\n     * 'x' limits movement to horizontal axis.\n     * 'y' limits movement to vertical axis.\n     * 'none' limits all movement.\n     *\n     * Defaults to 'both'.\n     */\n    axis: propTypes.oneOf(['both', 'x', 'y', 'none']),\n\n    /**\n     * `bounds` determines the range of movement available to the element.\n     * Available values are:\n     *\n     * 'parent' restricts movement within the Draggable's parent node.\n     *\n     * Alternatively, pass an object with the following properties, all of which are optional:\n     *\n     * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n     *\n     * All values are in px.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable bounds={{right: 300, bottom: 300}}>\n     *              <div>Content</div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    bounds: propTypes.oneOfType([propTypes.shape({\n      left: propTypes.number,\n      right: propTypes.number,\n      top: propTypes.number,\n      bottom: propTypes.number\n    }), propTypes.string, propTypes.oneOf([false])]),\n    defaultClassName: propTypes.string,\n    defaultClassNameDragging: propTypes.string,\n    defaultClassNameDragged: propTypes.string,\n\n    /**\n     * `defaultPosition` specifies the x and y that the dragged item should start at\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    defaultPosition: propTypes.shape({\n      x: propTypes.number,\n      y: propTypes.number\n    }),\n    positionOffset: propTypes.shape({\n      x: propTypes.oneOfType([propTypes.number, propTypes.string]),\n      y: propTypes.oneOfType([propTypes.number, propTypes.string])\n    }),\n\n    /**\n     * `position`, if present, defines the current position of the element.\n     *\n     *  This is similar to how form elements in React work - if no `position` is supplied, the component\n     *  is uncontrolled.\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable position={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    position: propTypes.shape({\n      x: propTypes.number,\n      y: propTypes.number\n    }),\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  });\n  Draggable.defaultProps = _extends({}, DraggableCore.defaultProps, {\n    axis: 'both',\n    bounds: false,\n    defaultClassName: 'react-draggable',\n    defaultClassNameDragging: 'react-draggable-dragging',\n    defaultClassNameDragged: 'react-draggable-dragged',\n    defaultPosition: {\n      x: 0,\n      y: 0\n    },\n    position: null,\n    scale: 1\n  }); // Previous versions of this lib exported <Draggable> as the root export. As to not break\n  // them, or TypeScript, we export *both* as the root and as 'default'.\n  // See https://github.com/mzabriskie/react-draggable/pull/254\n  // and https://github.com/mzabriskie/react-draggable/issues/266\n\n  Draggable[\"default\"] = Draggable;\n  Draggable.DraggableCore = DraggableCore;\n  return Draggable;\n});"],"sourceRoot":""}